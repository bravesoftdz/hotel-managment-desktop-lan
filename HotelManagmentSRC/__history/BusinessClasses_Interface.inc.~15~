(*****************************************)
(*      This file is autogenerated       *)
(*   Any manual changes will be LOST!    *)
(*****************************************)
(* Generated 09.06.2009 21:35:32         *)
(*****************************************)
(* This file should be stored in the     *)
(* same directory as the form/datamodule *)
(* with the corresponding model          *)
(*****************************************)
(* Copyright notice:                     *)
(*                                       *)
(*****************************************)

{$IFNDEF BusinessClasses_Interface.inc}
{$DEFINE BusinessClasses_Interface.inc}

{$IFNDEF BusinessClasses_unitheader}
unit BusinessClasses;
{$ENDIF}

interface

uses
  // interface uses
  // interface dependencies
  // attribute classes
  BoldAttributes,
  // other
  Classes,
  Controls, // for TDate
  SysUtils,
  BoldDefs,
  BoldSubscription,
  BoldDeriver,
  BoldElements,
  BoldDomainElement,
  BoldSystemRT,
  BoldSystem;

type
  { forward declarations of all classes }

  TBusinessClassesRoot = class;
  TBusinessClassesRootList = class;
  Tispoljz_obychn_skidkinapryamuyu_ocenivaet = class;
  Tispoljz_obychn_skidkinapryamuyu_ocenivaetList = class;
  TLinkPredost_diskont_vPredost_diskont = class;
  TLinkPredost_diskont_vPredost_diskontList = class;
  TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel = class;
  TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList = class;
  TBronj = class;
  TBronjList = class;
  TLog_operacii = class;
  TLog_operaciiList = class;
  TNastroiki = class;
  TNastroikiList = class;
  TNomer_arendy = class;
  TNomer_arendyList = class;
  TOgidanie = class;
  TOgidanieList = class;
  TPereocenka = class;
  TPereocenkaList = class;
  TPersona = class;
  TPersonaList = class;
  TPrihodn_dokument = class;
  TPrihodn_dokumentList = class;
  TProgivanie = class;
  TProgivanieList = class;
  TSpravochnik = class;
  TSpravochnikList = class;
  TOrganizaciya = class;
  TOrganizaciyaList = class;
  TPrihodnyi_order = class;
  TPrihodnyi_orderList = class;
  TDiscont_politika = class;
  TDiscont_politikaList = class;
  TDolgnostj = class;
  TDolgnostjList = class;
  TKlass_nomera = class;
  TKlass_nomeraList = class;
  TKorpus = class;
  TKorpusList = class;
  TOpciiya_urovnya = class;
  TOpciiya_urovnyaList = class;
  TOtelj = class;
  TOteljList = class;
  TRash_dokument = class;
  TRash_dokumentList = class;
  TSkidki = class;
  TSkidkiList = class;
  TCenovaya_politika = class;
  TCenovaya_politikaList = class;
  TKlient = class;
  TKlientList = class;
  TPersonal = class;
  TPersonalList = class;
  TList_klienta = class;
  TList_klientaList = class;

  TBusinessClassesRoot = class(TBoldObject)
  private
  protected
  public
  end;

  Tispoljz_obychn_skidkinapryamuyu_ocenivaet = class(TBusinessClassesRoot)
  private
    function _Getnapryamuyu_ocenivaet: TProgivanie;
    function _Get_M_napryamuyu_ocenivaet: TBoldObjectReference;
    function _Getispoljz_obychn_skidki: TSkidki;
    function _Get_M_ispoljz_obychn_skidki: TBoldObjectReference;
  protected
  public
    property M_napryamuyu_ocenivaet: TBoldObjectReference read _Get_M_napryamuyu_ocenivaet;
    property M_ispoljz_obychn_skidki: TBoldObjectReference read _Get_M_ispoljz_obychn_skidki;
    property napryamuyu_ocenivaet: TProgivanie read _Getnapryamuyu_ocenivaet;
    property ispoljz_obychn_skidki: TSkidki read _Getispoljz_obychn_skidki;
  end;

  TLinkPredost_diskont_vPredost_diskont = class(TBusinessClassesRoot)
  private
    function _GetPredost_diskont: TDiscont_politika;
    function _Get_M_Predost_diskont: TBoldObjectReference;
    function _GetPredost_diskont_v: TList_klienta;
    function _Get_M_Predost_diskont_v: TBoldObjectReference;
  protected
  public
    property M_Predost_diskont: TBoldObjectReference read _Get_M_Predost_diskont;
    property M_Predost_diskont_v: TBoldObjectReference read _Get_M_Predost_diskont_v;
    property Predost_diskont: TDiscont_politika read _GetPredost_diskont;
    property Predost_diskont_v: TList_klienta read _GetPredost_diskont_v;
  end;

  TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel = class(TBusinessClassesRoot)
  private
    function _GetSkidka_kak_prog_otd_chel: TProgivanie;
    function _Get_M_Skidka_kak_prog_otd_chel: TBoldObjectReference;
    function _GetOtd_chel_imeet_skidki: TDiscont_politika;
    function _Get_M_Otd_chel_imeet_skidki: TBoldObjectReference;
  protected
  public
    property M_Skidka_kak_prog_otd_chel: TBoldObjectReference read _Get_M_Skidka_kak_prog_otd_chel;
    property M_Otd_chel_imeet_skidki: TBoldObjectReference read _Get_M_Otd_chel_imeet_skidki;
    property Skidka_kak_prog_otd_chel: TProgivanie read _GetSkidka_kak_prog_otd_chel;
    property Otd_chel_imeet_skidki: TDiscont_politika read _GetOtd_chel_imeet_skidki;
  end;

  TBronj = class(TBusinessClassesRoot)
  private
    function _Get_M_Data_bronirovaniya: TBADateTime;
    function _GetData_bronirovaniya: TDateTime;
    procedure _SetData_bronirovaniya(const NewValue: TDateTime);
    function _Get_M_Zanyal_nomer: TBABoolean;
    function _GetZanyal_nomer: Boolean;
    procedure _SetZanyal_nomer(const NewValue: Boolean);
    function _Get_M_Ne_priehal: TBABoolean;
    function _GetNe_priehal: Boolean;
    procedure _SetNe_priehal(const NewValue: Boolean);
    function _Get_M_Proideno: TBABoolean;
    function _GetProideno: Boolean;
    function _Get_M_Na_datu: TBADateTime;
    function _GetNa_datu: TDateTime;
    procedure _SetNa_datu(const NewValue: TDateTime);
    function _Get_M_Do_daty: TBADateTime;
    function _GetDo_daty: TDateTime;
    procedure _SetDo_daty(const NewValue: TDateTime);
    function _Get_M_Na_kol_chelovek: TBAInteger;
    function _GetNa_kol_chelovek: Integer;
    procedure _SetNa_kol_chelovek(const NewValue: Integer);
    function _Get_M_Vygr_v_internet: TBABoolean;
    function _GetVygr_v_internet: Boolean;
    procedure _SetVygr_v_internet(const NewValue: Boolean);
    function _Get_M_Zagr_iz_interneta: TBABoolean;
    function _GetZagr_iz_interneta: Boolean;
    procedure _SetZagr_iz_interneta(const NewValue: Boolean);
    function _Get_M_IDInternet: TBAInteger;
    function _GetIDInternet: Integer;
    procedure _SetIDInternet(const NewValue: Integer);
    function _Get_M_Predoplata: TBAFloat;
    function _GetPredoplata: double;
    procedure _SetPredoplata(const NewValue: double);
    function _Getzavedena_na_klienta: TKlient;
    function _Get_M_zavedena_na_klienta: TBoldObjectReference;
    procedure _Setzavedena_na_klienta(const value: TKlient);
    function _Getrezerviruet: TNomer_arendy;
    function _Get_M_rezerviruet: TBoldObjectReference;
    procedure _Setrezerviruet(const value: TNomer_arendy);
  protected
  public
    property M_Data_bronirovaniya: TBADateTime read _Get_M_Data_bronirovaniya;
    property M_Zanyal_nomer: TBABoolean read _Get_M_Zanyal_nomer;
    property M_Ne_priehal: TBABoolean read _Get_M_Ne_priehal;
    property M_Proideno: TBABoolean read _Get_M_Proideno;
    property M_Na_datu: TBADateTime read _Get_M_Na_datu;
    property M_Do_daty: TBADateTime read _Get_M_Do_daty;
    property M_Na_kol_chelovek: TBAInteger read _Get_M_Na_kol_chelovek;
    property M_Vygr_v_internet: TBABoolean read _Get_M_Vygr_v_internet;
    property M_Zagr_iz_interneta: TBABoolean read _Get_M_Zagr_iz_interneta;
    property M_IDInternet: TBAInteger read _Get_M_IDInternet;
    property M_Predoplata: TBAFloat read _Get_M_Predoplata;
    property M_zavedena_na_klienta: TBoldObjectReference read _Get_M_zavedena_na_klienta;
    property M_rezerviruet: TBoldObjectReference read _Get_M_rezerviruet;
    property Data_bronirovaniya: TDateTime read _GetData_bronirovaniya write _SetData_bronirovaniya;
    property Zanyal_nomer: Boolean read _GetZanyal_nomer write _SetZanyal_nomer;
    property Ne_priehal: Boolean read _GetNe_priehal write _SetNe_priehal;
    property Proideno: Boolean read _GetProideno;
    property Na_datu: TDateTime read _GetNa_datu write _SetNa_datu;
    property Do_daty: TDateTime read _GetDo_daty write _SetDo_daty;
    property Na_kol_chelovek: Integer read _GetNa_kol_chelovek write _SetNa_kol_chelovek;
    property Vygr_v_internet: Boolean read _GetVygr_v_internet write _SetVygr_v_internet;
    property Zagr_iz_interneta: Boolean read _GetZagr_iz_interneta write _SetZagr_iz_interneta;
    property IDInternet: Integer read _GetIDInternet write _SetIDInternet;
    property Predoplata: double read _GetPredoplata write _SetPredoplata;
    property zavedena_na_klienta: TKlient read _Getzavedena_na_klienta write _Setzavedena_na_klienta;
    property rezerviruet: TNomer_arendy read _Getrezerviruet write _Setrezerviruet;
  end;

  TLog_operacii = class(TBusinessClassesRoot)
  private
    function _Get_M_Naimenovanie_operacii: TBAString;
    function _GetNaimenovanie_operacii: String;
    procedure _SetNaimenovanie_operacii(const NewValue: String);
    function _Get_M_Subjekt: TBAString;
    function _GetSubjekt: String;
    function _Get_M_Data_i_vremya: TBAString;
    function _GetData_i_vremya: String;
    function _Get_M_Data: TBADate;
    function _GetData: TDate;
    procedure _SetData(const NewValue: TDate);
    function _Get_M_Vremya: TBAString;
    function _GetVremya: String;
    procedure _SetVremya(const NewValue: String);
    function _Get_M_Kommentarii: TBAString;
    function _GetKommentarii: String;
    procedure _SetKommentarii(const NewValue: String);
    function _Getot_deistvii: TPersonal;
    function _Get_M_ot_deistvii: TBoldObjectReference;
    procedure _Setot_deistvii(const value: TPersonal);
  protected
  public
    property M_Naimenovanie_operacii: TBAString read _Get_M_Naimenovanie_operacii;
    property M_Subjekt: TBAString read _Get_M_Subjekt;
    property M_Data_i_vremya: TBAString read _Get_M_Data_i_vremya;
    property M_Data: TBADate read _Get_M_Data;
    property M_Vremya: TBAString read _Get_M_Vremya;
    property M_Kommentarii: TBAString read _Get_M_Kommentarii;
    property M_ot_deistvii: TBoldObjectReference read _Get_M_ot_deistvii;
    property Naimenovanie_operacii: String read _GetNaimenovanie_operacii write _SetNaimenovanie_operacii;
    property Subjekt: String read _GetSubjekt;
    property Data_i_vremya: String read _GetData_i_vremya;
    property Data: TDate read _GetData write _SetData;
    property Vremya: String read _GetVremya write _SetVremya;
    property Kommentarii: String read _GetKommentarii write _SetKommentarii;
    property ot_deistvii: TPersonal read _Getot_deistvii write _Setot_deistvii;
  end;

  TNastroiki = class(TBusinessClassesRoot)
  private
    function _Get_M_Tekushee_vremya: TBADateTime;
    function _GetTekushee_vremya: TDateTime;
    procedure _SetTekushee_vremya(const NewValue: TDateTime);
    function _Get_M_Nachalo_intervala: TBADateTime;
    function _GetNachalo_intervala: TDateTime;
    procedure _SetNachalo_intervala(const NewValue: TDateTime);
    function _Get_M_Konec_intervala: TBADateTime;
    function _GetKonec_intervala: TDateTime;
    procedure _SetKonec_intervala(const NewValue: TDateTime);
    function _Get_M_Nachalo_sezona: TBADateTime;
    function _GetNachalo_sezona: TDateTime;
    procedure _SetNachalo_sezona(const NewValue: TDateTime);
    function _Get_M_Konec_sezona: TBADateTime;
    function _GetKonec_sezona: TDateTime;
    procedure _SetKonec_sezona(const NewValue: TDateTime);
    function _Get_M_Vych_za_sezon: TBABoolean;
    function _GetVych_za_sezon: Boolean;
    procedure _SetVych_za_sezon(const NewValue: Boolean);
    function _Get_M_Cvet_fona_svobodnyh: TBAString;
    function _GetCvet_fona_svobodnyh: String;
    procedure _SetCvet_fona_svobodnyh(const NewValue: String);
    function _Get_M_Cvet_teksta_svob: TBAString;
    function _GetCvet_teksta_svob: String;
    procedure _SetCvet_teksta_svob(const NewValue: String);
    function _Get_M_Cvet_fona_zanyatyh: TBAString;
    function _GetCvet_fona_zanyatyh: String;
    procedure _SetCvet_fona_zanyatyh(const NewValue: String);
    function _Get_M_Cvet_teksta_zanyatyh: TBAString;
    function _GetCvet_teksta_zanyatyh: String;
    procedure _SetCvet_teksta_zanyatyh(const NewValue: String);
    function _Get_M_Cvet_fona_bronir: TBAString;
    function _GetCvet_fona_bronir: String;
    procedure _SetCvet_fona_bronir(const NewValue: String);
    function _Get_M_Cvet_teksta_bronir: TBAString;
    function _GetCvet_teksta_bronir: String;
    procedure _SetCvet_teksta_bronir(const NewValue: String);
    function _Get_M_Cvet_fona_perenasel: TBAString;
    function _GetCvet_fona_perenasel: String;
    procedure _SetCvet_fona_perenasel(const NewValue: String);
    function _Get_M_Cvet_teksta_perenasel: TBAString;
    function _GetCvet_teksta_perenasel: String;
    procedure _SetCvet_teksta_perenasel(const NewValue: String);
    function _Get_M_Identifikator_otelya: TBAInteger;
    function _GetIdentifikator_otelya: Integer;
    procedure _SetIdentifikator_otelya(const NewValue: Integer);
    function _Get_M_Tek_vremya: TBADateTime;
    function _GetTek_vremya: TDateTime;
    procedure _SetTek_vremya(const NewValue: TDateTime);
    function _Get_M_Dopustimoe_vremya_lishn: TBAString;
    function _GetDopustimoe_vremya_lishn: String;
    procedure _SetDopustimoe_vremya_lishn(const NewValue: String);
    function _Get_M_Cvet_fona_ogid: TBAString;
    function _GetCvet_fona_ogid: String;
    procedure _SetCvet_fona_ogid(const NewValue: String);
    function _Get_M_Cvet_teksta_ogid: TBAString;
    function _GetCvet_teksta_ogid: String;
    procedure _SetCvet_teksta_ogid(const NewValue: String);
    function _Get_M_Cvet_fona_neoplach: TBAString;
    function _GetCvet_fona_neoplach: String;
    procedure _SetCvet_fona_neoplach(const NewValue: String);
    function _Get_M_Cvet_teksta_neoplach: TBAString;
    function _GetCvet_teksta_neoplach: String;
    procedure _SetCvet_teksta_neoplach(const NewValue: String);
    function _Get_M_Cvet_fona_sverhsroka: TBAString;
    function _GetCvet_fona_sverhsroka: String;
    procedure _SetCvet_fona_sverhsroka(const NewValue: String);
    function _Get_M_Cvet_teksta_sverhsroka: TBAString;
    function _GetCvet_teksta_sverhsroka: String;
    procedure _SetCvet_teksta_sverhsroka(const NewValue: String);
    function _Get_M_Schitatj_chasy_pri_pereocenk: TBABoolean;
    function _GetSchitatj_chasy_pri_pereocenk: Boolean;
    procedure _SetSchitatj_chasy_pri_pereocenk(const NewValue: Boolean);
    function _Get_M_Avtomatich_zagruzka_fotodannyh: TBABoolean;
    function _GetAvtomatich_zagruzka_fotodannyh: Boolean;
    procedure _SetAvtomatich_zagruzka_fotodannyh(const NewValue: Boolean);
    function _Get_M_Tek_data: TBADate;
    function _GetTek_data: TDate;
    procedure _SetTek_data(const NewValue: TDate);
    function _Get_M_Schitatj_dlya_kagd_kl: TBABoolean;
    function _GetSchitatj_dlya_kagd_kl: Boolean;
    procedure _SetSchitatj_dlya_kagd_kl(const NewValue: Boolean);
    function _Get_M_Stoim_na_chel_ot_stoim_nom: TBABoolean;
    function _GetStoim_na_chel_ot_stoim_nom: Boolean;
    procedure _SetStoim_na_chel_ot_stoim_nom(const NewValue: Boolean);
    function _Get_M_Schit_po_cen_politike: TBABoolean;
    function _GetSchit_po_cen_politike: Boolean;
    procedure _SetSchit_po_cen_politike(const NewValue: Boolean);
    function _Getopr_nastr_dlya_klassa: TKlass_nomeraList;
  protected
  public
    property M_Tekushee_vremya: TBADateTime read _Get_M_Tekushee_vremya;
    property M_Nachalo_intervala: TBADateTime read _Get_M_Nachalo_intervala;
    property M_Konec_intervala: TBADateTime read _Get_M_Konec_intervala;
    property M_Nachalo_sezona: TBADateTime read _Get_M_Nachalo_sezona;
    property M_Konec_sezona: TBADateTime read _Get_M_Konec_sezona;
    property M_Vych_za_sezon: TBABoolean read _Get_M_Vych_za_sezon;
    property M_Cvet_fona_svobodnyh: TBAString read _Get_M_Cvet_fona_svobodnyh;
    property M_Cvet_teksta_svob: TBAString read _Get_M_Cvet_teksta_svob;
    property M_Cvet_fona_zanyatyh: TBAString read _Get_M_Cvet_fona_zanyatyh;
    property M_Cvet_teksta_zanyatyh: TBAString read _Get_M_Cvet_teksta_zanyatyh;
    property M_Cvet_fona_bronir: TBAString read _Get_M_Cvet_fona_bronir;
    property M_Cvet_teksta_bronir: TBAString read _Get_M_Cvet_teksta_bronir;
    property M_Cvet_fona_perenasel: TBAString read _Get_M_Cvet_fona_perenasel;
    property M_Cvet_teksta_perenasel: TBAString read _Get_M_Cvet_teksta_perenasel;
    property M_Identifikator_otelya: TBAInteger read _Get_M_Identifikator_otelya;
    property M_Tek_vremya: TBADateTime read _Get_M_Tek_vremya;
    property M_Dopustimoe_vremya_lishn: TBAString read _Get_M_Dopustimoe_vremya_lishn;
    property M_Cvet_fona_ogid: TBAString read _Get_M_Cvet_fona_ogid;
    property M_Cvet_teksta_ogid: TBAString read _Get_M_Cvet_teksta_ogid;
    property M_Cvet_fona_neoplach: TBAString read _Get_M_Cvet_fona_neoplach;
    property M_Cvet_teksta_neoplach: TBAString read _Get_M_Cvet_teksta_neoplach;
    property M_Cvet_fona_sverhsroka: TBAString read _Get_M_Cvet_fona_sverhsroka;
    property M_Cvet_teksta_sverhsroka: TBAString read _Get_M_Cvet_teksta_sverhsroka;
    property M_Schitatj_chasy_pri_pereocenk: TBABoolean read _Get_M_Schitatj_chasy_pri_pereocenk;
    property M_Avtomatich_zagruzka_fotodannyh: TBABoolean read _Get_M_Avtomatich_zagruzka_fotodannyh;
    property M_Tek_data: TBADate read _Get_M_Tek_data;
    property M_Schitatj_dlya_kagd_kl: TBABoolean read _Get_M_Schitatj_dlya_kagd_kl;
    property M_Stoim_na_chel_ot_stoim_nom: TBABoolean read _Get_M_Stoim_na_chel_ot_stoim_nom;
    property M_Schit_po_cen_politike: TBABoolean read _Get_M_Schit_po_cen_politike;
    property M_opr_nastr_dlya_klassa: TKlass_nomeraList read _Getopr_nastr_dlya_klassa;
    property Tekushee_vremya: TDateTime read _GetTekushee_vremya write _SetTekushee_vremya;
    property Nachalo_intervala: TDateTime read _GetNachalo_intervala write _SetNachalo_intervala;
    property Konec_intervala: TDateTime read _GetKonec_intervala write _SetKonec_intervala;
    property Nachalo_sezona: TDateTime read _GetNachalo_sezona write _SetNachalo_sezona;
    property Konec_sezona: TDateTime read _GetKonec_sezona write _SetKonec_sezona;
    property Vych_za_sezon: Boolean read _GetVych_za_sezon write _SetVych_za_sezon;
    property Cvet_fona_svobodnyh: String read _GetCvet_fona_svobodnyh write _SetCvet_fona_svobodnyh;
    property Cvet_teksta_svob: String read _GetCvet_teksta_svob write _SetCvet_teksta_svob;
    property Cvet_fona_zanyatyh: String read _GetCvet_fona_zanyatyh write _SetCvet_fona_zanyatyh;
    property Cvet_teksta_zanyatyh: String read _GetCvet_teksta_zanyatyh write _SetCvet_teksta_zanyatyh;
    property Cvet_fona_bronir: String read _GetCvet_fona_bronir write _SetCvet_fona_bronir;
    property Cvet_teksta_bronir: String read _GetCvet_teksta_bronir write _SetCvet_teksta_bronir;
    property Cvet_fona_perenasel: String read _GetCvet_fona_perenasel write _SetCvet_fona_perenasel;
    property Cvet_teksta_perenasel: String read _GetCvet_teksta_perenasel write _SetCvet_teksta_perenasel;
    property Identifikator_otelya: Integer read _GetIdentifikator_otelya write _SetIdentifikator_otelya;
    property Tek_vremya: TDateTime read _GetTek_vremya write _SetTek_vremya;
    property Dopustimoe_vremya_lishn: String read _GetDopustimoe_vremya_lishn write _SetDopustimoe_vremya_lishn;
    property Cvet_fona_ogid: String read _GetCvet_fona_ogid write _SetCvet_fona_ogid;
    property Cvet_teksta_ogid: String read _GetCvet_teksta_ogid write _SetCvet_teksta_ogid;
    property Cvet_fona_neoplach: String read _GetCvet_fona_neoplach write _SetCvet_fona_neoplach;
    property Cvet_teksta_neoplach: String read _GetCvet_teksta_neoplach write _SetCvet_teksta_neoplach;
    property Cvet_fona_sverhsroka: String read _GetCvet_fona_sverhsroka write _SetCvet_fona_sverhsroka;
    property Cvet_teksta_sverhsroka: String read _GetCvet_teksta_sverhsroka write _SetCvet_teksta_sverhsroka;
    property Schitatj_chasy_pri_pereocenk: Boolean read _GetSchitatj_chasy_pri_pereocenk write _SetSchitatj_chasy_pri_pereocenk;
    property Avtomatich_zagruzka_fotodannyh: Boolean read _GetAvtomatich_zagruzka_fotodannyh write _SetAvtomatich_zagruzka_fotodannyh;
    property Tek_data: TDate read _GetTek_data write _SetTek_data;
    property Schitatj_dlya_kagd_kl: Boolean read _GetSchitatj_dlya_kagd_kl write _SetSchitatj_dlya_kagd_kl;
    property Stoim_na_chel_ot_stoim_nom: Boolean read _GetStoim_na_chel_ot_stoim_nom write _SetStoim_na_chel_ot_stoim_nom;
    property Schit_po_cen_politike: Boolean read _GetSchit_po_cen_politike write _SetSchit_po_cen_politike;
    property opr_nastr_dlya_klassa: TKlass_nomeraList read _Getopr_nastr_dlya_klassa;
  end;

  TNomer_arendy = class(TBusinessClassesRoot)
  private
    function _Get_M_Nomer: TBAInteger;
    function _GetNomer: Integer;
    procedure _SetNomer(const NewValue: Integer);
    function _Get_M_Stoimostj_v_sutki: TBAFloat;
    function _GetStoimostj_v_sutki: double;
    procedure _SetStoimostj_v_sutki(const NewValue: double);
    function _Get_M_Stoim_v_sutki_vychisl: TBAFloat;
    function _GetStoim_v_sutki_vychisl: double;
    function _Get_M_Zabronirovan: TBABoolean;
    function _GetZabronirovan: Boolean;
    function _Get_M_Zanyat: TBABoolean;
    function _GetZanyat: Boolean;
    function _Get_M_Svoboden: TBABoolean;
    function _GetSvoboden: Boolean;
    function _Get_M_Chislo_chelovek: TBAInteger;
    function _GetChislo_chelovek: Integer;
    procedure _SetChislo_chelovek(const NewValue: Integer);
    function _Get_M_Perepolnen: TBABoolean;
    function _GetPerepolnen: Boolean;
    function _Get_M_Zarabotano_za_period: TBAFloat;
    function _GetZarabotano_za_period: double;
    function _Get_M_Identifikator_otelya: TBAInteger;
    function _GetIdentifikator_otelya: Integer;
    function _Get_M_Nachalo_intervala: TBADateTime;
    function _GetNachalo_intervala: TDateTime;
    function _Get_M_Konec_intervala: TBADateTime;
    function _GetKonec_intervala: TDateTime;
    function _Get_M_Tek_vremya: TBADateTime;
    function _GetTek_vremya: TDateTime;
    function _Get_M_Opred_stoim_ot_klassa: TBABoolean;
    function _GetOpred_stoim_ot_klassa: Boolean;
    procedure _SetOpred_stoim_ot_klassa(const NewValue: Boolean);
    function _Get_M_Zadolgaet_klient: TBABoolean;
    function _GetZadolgaet_klient: Boolean;
    function _Get_M_Sverh_sroka: TBABoolean;
    function _GetSverh_sroka: Boolean;
    function _Get_M_Perekryvaet_bronj: TBABoolean;
    function _GetPerekryvaet_bronj: Boolean;
    function _Get_M_Blig_bronj: TBADateTime;
    function _GetBlig_bronj: TDateTime;
    function _Get_M_Stoim_na_chel_v_sutki: TBAFloat;
    function _GetStoim_na_chel_v_sutki: double;
    procedure _SetStoim_na_chel_v_sutki(const NewValue: double);
    function _Get_M_Stoim_na_chel_vychisl: TBAFloat;
    function _GetStoim_na_chel_vychisl: double;
    function _Get_M_Kol_dop_mest_vychisl: TBAInteger;
    function _GetKol_dop_mest_vychisl: Integer;
    function _Get_M_Kol_dop_mest: TBAInteger;
    function _GetKol_dop_mest: Integer;
    procedure _SetKol_dop_mest(const NewValue: Integer);
    function _GetSootvetstvuet: TKlass_nomera;
    function _Get_M_Sootvetstvuet: TBoldObjectReference;
    procedure _SetSootvetstvuet(const value: TKlass_nomera);
    function _GetEkspluataciya_fiks_v: TList_klientaList;
    function _Getnahoditsya_v_otele: TOtelj;
    function _Get_M_nahoditsya_v_otele: TBoldObjectReference;
    procedure _Setnahoditsya_v_otele(const value: TOtelj);
    function _Getnahoditsya_v_korpuse: TKorpus;
    function _Get_M_nahoditsya_v_korpuse: TBoldObjectReference;
    procedure _Setnahoditsya_v_korpuse(const value: TKorpus);
    function _Getzarezervirovan: TBronjList;
    function _Getzapisan_v_ogidanie: TOgidanieList;
  protected
    procedure _Perekryvaet_bronj_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    procedure _Kol_dop_mest_vychisl_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Nomer: TBAInteger read _Get_M_Nomer;
    property M_Stoimostj_v_sutki: TBAFloat read _Get_M_Stoimostj_v_sutki;
    property M_Stoim_v_sutki_vychisl: TBAFloat read _Get_M_Stoim_v_sutki_vychisl;
    property M_Zabronirovan: TBABoolean read _Get_M_Zabronirovan;
    property M_Zanyat: TBABoolean read _Get_M_Zanyat;
    property M_Svoboden: TBABoolean read _Get_M_Svoboden;
    property M_Chislo_chelovek: TBAInteger read _Get_M_Chislo_chelovek;
    property M_Perepolnen: TBABoolean read _Get_M_Perepolnen;
    property M_Zarabotano_za_period: TBAFloat read _Get_M_Zarabotano_za_period;
    property M_Identifikator_otelya: TBAInteger read _Get_M_Identifikator_otelya;
    property M_Nachalo_intervala: TBADateTime read _Get_M_Nachalo_intervala;
    property M_Konec_intervala: TBADateTime read _Get_M_Konec_intervala;
    property M_Tek_vremya: TBADateTime read _Get_M_Tek_vremya;
    property M_Opred_stoim_ot_klassa: TBABoolean read _Get_M_Opred_stoim_ot_klassa;
    property M_Zadolgaet_klient: TBABoolean read _Get_M_Zadolgaet_klient;
    property M_Sverh_sroka: TBABoolean read _Get_M_Sverh_sroka;
    property M_Perekryvaet_bronj: TBABoolean read _Get_M_Perekryvaet_bronj;
    property M_Blig_bronj: TBADateTime read _Get_M_Blig_bronj;
    property M_Stoim_na_chel_v_sutki: TBAFloat read _Get_M_Stoim_na_chel_v_sutki;
    property M_Stoim_na_chel_vychisl: TBAFloat read _Get_M_Stoim_na_chel_vychisl;
    property M_Kol_dop_mest_vychisl: TBAInteger read _Get_M_Kol_dop_mest_vychisl;
    property M_Kol_dop_mest: TBAInteger read _Get_M_Kol_dop_mest;
    property M_Sootvetstvuet: TBoldObjectReference read _Get_M_Sootvetstvuet;
    property M_Ekspluataciya_fiks_v: TList_klientaList read _GetEkspluataciya_fiks_v;
    property M_nahoditsya_v_otele: TBoldObjectReference read _Get_M_nahoditsya_v_otele;
    property M_nahoditsya_v_korpuse: TBoldObjectReference read _Get_M_nahoditsya_v_korpuse;
    property M_zarezervirovan: TBronjList read _Getzarezervirovan;
    property M_zapisan_v_ogidanie: TOgidanieList read _Getzapisan_v_ogidanie;
    property Nomer: Integer read _GetNomer write _SetNomer;
    property Stoimostj_v_sutki: double read _GetStoimostj_v_sutki write _SetStoimostj_v_sutki;
    property Stoim_v_sutki_vychisl: double read _GetStoim_v_sutki_vychisl;
    property Zabronirovan: Boolean read _GetZabronirovan;
    property Zanyat: Boolean read _GetZanyat;
    property Svoboden: Boolean read _GetSvoboden;
    property Chislo_chelovek: Integer read _GetChislo_chelovek write _SetChislo_chelovek;
    property Perepolnen: Boolean read _GetPerepolnen;
    property Zarabotano_za_period: double read _GetZarabotano_za_period;
    property Identifikator_otelya: Integer read _GetIdentifikator_otelya;
    property Nachalo_intervala: TDateTime read _GetNachalo_intervala;
    property Konec_intervala: TDateTime read _GetKonec_intervala;
    property Tek_vremya: TDateTime read _GetTek_vremya;
    property Opred_stoim_ot_klassa: Boolean read _GetOpred_stoim_ot_klassa write _SetOpred_stoim_ot_klassa;
    property Zadolgaet_klient: Boolean read _GetZadolgaet_klient;
    property Sverh_sroka: Boolean read _GetSverh_sroka;
    property Perekryvaet_bronj: Boolean read _GetPerekryvaet_bronj;
    property Blig_bronj: TDateTime read _GetBlig_bronj;
    property Stoim_na_chel_v_sutki: double read _GetStoim_na_chel_v_sutki write _SetStoim_na_chel_v_sutki;
    property Stoim_na_chel_vychisl: double read _GetStoim_na_chel_vychisl;
    property Kol_dop_mest_vychisl: Integer read _GetKol_dop_mest_vychisl;
    property Kol_dop_mest: Integer read _GetKol_dop_mest write _SetKol_dop_mest;
    property Sootvetstvuet: TKlass_nomera read _GetSootvetstvuet write _SetSootvetstvuet;
    property Ekspluataciya_fiks_v: TList_klientaList read _GetEkspluataciya_fiks_v;
    property nahoditsya_v_otele: TOtelj read _Getnahoditsya_v_otele write _Setnahoditsya_v_otele;
    property nahoditsya_v_korpuse: TKorpus read _Getnahoditsya_v_korpuse write _Setnahoditsya_v_korpuse;
    property zarezervirovan: TBronjList read _Getzarezervirovan;
    property zapisan_v_ogidanie: TOgidanieList read _Getzapisan_v_ogidanie;
  end;

  TOgidanie = class(TBusinessClassesRoot)
  private
    function _Get_M_Nachalo_ogidaniya: TBADateTime;
    function _GetNachalo_ogidaniya: TDateTime;
    procedure _SetNachalo_ogidaniya(const NewValue: TDateTime);
    function _Get_M_Dogdalsya: TBABoolean;
    function _GetDogdalsya: Boolean;
    procedure _SetDogdalsya(const NewValue: Boolean);
    function _Get_M_Ne_dogdalsya: TBABoolean;
    function _GetNe_dogdalsya: Boolean;
    procedure _SetNe_dogdalsya(const NewValue: Boolean);
    function _Get_M_Proideno: TBABoolean;
    function _GetProideno: Boolean;
    function _Get_M_Na_kol_chelovek: TBAInteger;
    function _GetNa_kol_chelovek: Integer;
    procedure _SetNa_kol_chelovek(const NewValue: Integer);
    function _Getogidaet_klient: TKlient;
    function _Get_M_ogidaet_klient: TBoldObjectReference;
    procedure _Setogidaet_klient(const value: TKlient);
    function _Getogidanie_nomera: TNomer_arendy;
    function _Get_M_ogidanie_nomera: TBoldObjectReference;
    procedure _Setogidanie_nomera(const value: TNomer_arendy);
  protected
  public
    property M_Nachalo_ogidaniya: TBADateTime read _Get_M_Nachalo_ogidaniya;
    property M_Dogdalsya: TBABoolean read _Get_M_Dogdalsya;
    property M_Ne_dogdalsya: TBABoolean read _Get_M_Ne_dogdalsya;
    property M_Proideno: TBABoolean read _Get_M_Proideno;
    property M_Na_kol_chelovek: TBAInteger read _Get_M_Na_kol_chelovek;
    property M_ogidaet_klient: TBoldObjectReference read _Get_M_ogidaet_klient;
    property M_ogidanie_nomera: TBoldObjectReference read _Get_M_ogidanie_nomera;
    property Nachalo_ogidaniya: TDateTime read _GetNachalo_ogidaniya write _SetNachalo_ogidaniya;
    property Dogdalsya: Boolean read _GetDogdalsya write _SetDogdalsya;
    property Ne_dogdalsya: Boolean read _GetNe_dogdalsya write _SetNe_dogdalsya;
    property Proideno: Boolean read _GetProideno;
    property Na_kol_chelovek: Integer read _GetNa_kol_chelovek write _SetNa_kol_chelovek;
    property ogidaet_klient: TKlient read _Getogidaet_klient write _Setogidaet_klient;
    property ogidanie_nomera: TNomer_arendy read _Getogidanie_nomera write _Setogidanie_nomera;
  end;

  TPereocenka = class(TBusinessClassesRoot)
  private
    function _Get_M_Data_pereocenki: TBADateTime;
    function _GetData_pereocenki: TDateTime;
    procedure _SetData_pereocenki(const NewValue: TDateTime);
    function _Get_M_Summa: TBAFloat;
    function _GetSumma: double;
    procedure _SetSumma(const NewValue: double);
    function _Get_M_Opisanie: TBAString;
    function _GetOpisanie: String;
    procedure _SetOpisanie(const NewValue: String);
    function _Getpereoceniv_stoim: TList_klienta;
    function _Get_M_pereoceniv_stoim: TBoldObjectReference;
    procedure _Setpereoceniv_stoim(const value: TList_klienta);
  protected
  public
    property M_Data_pereocenki: TBADateTime read _Get_M_Data_pereocenki;
    property M_Summa: TBAFloat read _Get_M_Summa;
    property M_Opisanie: TBAString read _Get_M_Opisanie;
    property M_pereoceniv_stoim: TBoldObjectReference read _Get_M_pereoceniv_stoim;
    property Data_pereocenki: TDateTime read _GetData_pereocenki write _SetData_pereocenki;
    property Summa: double read _GetSumma write _SetSumma;
    property Opisanie: String read _GetOpisanie write _SetOpisanie;
    property pereoceniv_stoim: TList_klienta read _Getpereoceniv_stoim write _Setpereoceniv_stoim;
  end;

  TPersona = class(TBusinessClassesRoot)
  private
    function _Get_M_Familiya: TBAString;
    function _GetFamiliya: String;
    procedure _SetFamiliya(const NewValue: String);
    function _Get_M_Imya: TBAString;
    function _GetImya: String;
    procedure _SetImya(const NewValue: String);
    function _Get_M_Otchestvo: TBAString;
    function _GetOtchestvo: String;
    procedure _SetOtchestvo(const NewValue: String);
    function _Get_M_Ulica: TBAString;
    function _GetUlica: String;
    procedure _SetUlica(const NewValue: String);
    function _Get_M_Dom: TBAInteger;
    function _GetDom: Integer;
    procedure _SetDom(const NewValue: Integer);
    function _Get_M_Kvartira: TBAInteger;
    function _GetKvartira: Integer;
    procedure _SetKvartira(const NewValue: Integer);
    function _Get_M_Korpus: TBAInteger;
    function _GetKorpus: Integer;
    procedure _SetKorpus(const NewValue: Integer);
    function _Get_M_Mobiljnyi_telefon: TBAString;
    function _GetMobiljnyi_telefon: String;
    procedure _SetMobiljnyi_telefon(const NewValue: String);
    function _Get_M_Rabochii_telefon: TBAString;
    function _GetRabochii_telefon: String;
    procedure _SetRabochii_telefon(const NewValue: String);
    function _Get_M_Domashnii_telefon: TBAString;
    function _GetDomashnii_telefon: String;
    procedure _SetDomashnii_telefon(const NewValue: String);
    function _Get_M_Elektronnyi_adres: TBAString;
    function _GetElektronnyi_adres: String;
    procedure _SetElektronnyi_adres(const NewValue: String);
    function _Get_M_Polnoe_imya: TBAString;
    function _GetPolnoe_imya: String;
    function _Get_M_Seriya_pasporta: TBAString;
    function _GetSeriya_pasporta: String;
    procedure _SetSeriya_pasporta(const NewValue: String);
    function _Get_M_Propiska: TBAString;
    function _GetPropiska: String;
    function _Get_M_Kem_vydan: TBAString;
    function _GetKem_vydan: String;
    procedure _SetKem_vydan(const NewValue: String);
    function _Get_M_Mesto_rogdeniya: TBAString;
    function _GetMesto_rogdeniya: String;
    procedure _SetMesto_rogdeniya(const NewValue: String);
    function _Get_M_Obshie_dannye: TBAString;
    function _GetObshie_dannye: String;
    procedure _SetObshie_dannye(const NewValue: String);
    function _Get_M_Data_rogdeniya: TBADate;
    function _GetData_rogdeniya: TDate;
    procedure _SetData_rogdeniya(const NewValue: TDate);
    function _Get_M_Imeninnik: TBABoolean;
    function _GetImeninnik: Boolean;
  protected
    procedure _Propiska_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Familiya: TBAString read _Get_M_Familiya;
    property M_Imya: TBAString read _Get_M_Imya;
    property M_Otchestvo: TBAString read _Get_M_Otchestvo;
    property M_Ulica: TBAString read _Get_M_Ulica;
    property M_Dom: TBAInteger read _Get_M_Dom;
    property M_Kvartira: TBAInteger read _Get_M_Kvartira;
    property M_Korpus: TBAInteger read _Get_M_Korpus;
    property M_Mobiljnyi_telefon: TBAString read _Get_M_Mobiljnyi_telefon;
    property M_Rabochii_telefon: TBAString read _Get_M_Rabochii_telefon;
    property M_Domashnii_telefon: TBAString read _Get_M_Domashnii_telefon;
    property M_Elektronnyi_adres: TBAString read _Get_M_Elektronnyi_adres;
    property M_Polnoe_imya: TBAString read _Get_M_Polnoe_imya;
    property M_Seriya_pasporta: TBAString read _Get_M_Seriya_pasporta;
    property M_Propiska: TBAString read _Get_M_Propiska;
    property M_Kem_vydan: TBAString read _Get_M_Kem_vydan;
    property M_Mesto_rogdeniya: TBAString read _Get_M_Mesto_rogdeniya;
    property M_Obshie_dannye: TBAString read _Get_M_Obshie_dannye;
    property M_Data_rogdeniya: TBADate read _Get_M_Data_rogdeniya;
    property M_Imeninnik: TBABoolean read _Get_M_Imeninnik;
    property Familiya: String read _GetFamiliya write _SetFamiliya;
    property Imya: String read _GetImya write _SetImya;
    property Otchestvo: String read _GetOtchestvo write _SetOtchestvo;
    property Ulica: String read _GetUlica write _SetUlica;
    property Dom: Integer read _GetDom write _SetDom;
    property Kvartira: Integer read _GetKvartira write _SetKvartira;
    property Korpus: Integer read _GetKorpus write _SetKorpus;
    property Mobiljnyi_telefon: String read _GetMobiljnyi_telefon write _SetMobiljnyi_telefon;
    property Rabochii_telefon: String read _GetRabochii_telefon write _SetRabochii_telefon;
    property Domashnii_telefon: String read _GetDomashnii_telefon write _SetDomashnii_telefon;
    property Elektronnyi_adres: String read _GetElektronnyi_adres write _SetElektronnyi_adres;
    property Polnoe_imya: String read _GetPolnoe_imya;
    property Seriya_pasporta: String read _GetSeriya_pasporta write _SetSeriya_pasporta;
    property Propiska: String read _GetPropiska;
    property Kem_vydan: String read _GetKem_vydan write _SetKem_vydan;
    property Mesto_rogdeniya: String read _GetMesto_rogdeniya write _SetMesto_rogdeniya;
    property Obshie_dannye: String read _GetObshie_dannye write _SetObshie_dannye;
    property Data_rogdeniya: TDate read _GetData_rogdeniya write _SetData_rogdeniya;
    property Imeninnik: Boolean read _GetImeninnik;
  end;

  TPrihodn_dokument = class(TBusinessClassesRoot)
  private
    function _Get_M_Vsego_dohod_s_arendy: TBAFloat;
    function _GetVsego_dohod_s_arendy: double;
  protected
    procedure _Vsego_dohod_s_arendy_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Vsego_dohod_s_arendy: TBAFloat read _Get_M_Vsego_dohod_s_arendy;
    property Vsego_dohod_s_arendy: double read _GetVsego_dohod_s_arendy;
  end;

  TProgivanie = class(TBusinessClassesRoot)
  private
    function _Get_M_Vyselen: TBABoolean;
    function _GetVyselen: Boolean;
    procedure _SetVyselen(const NewValue: Boolean);
    function _Get_M_Kolichestvo_dnei_progiv: TBAFloat;
    function _GetKolichestvo_dnei_progiv: double;
    procedure _SetKolichestvo_dnei_progiv(const NewValue: double);
    function _Get_M_Otdeljno: TBABoolean;
    function _GetOtdeljno: Boolean;
    procedure _SetOtdeljno(const NewValue: Boolean);
    function _Get_M_Do_daty: TBADateTime;
    function _GetDo_daty: TDateTime;
    procedure _SetDo_daty(const NewValue: TDateTime);
    function _Get_M_S_daty: TBADateTime;
    function _GetS_daty: TDateTime;
    procedure _SetS_daty(const NewValue: TDateTime);
    function _Get_M_Isp_otd_stoimostj: TBABoolean;
    function _GetIsp_otd_stoimostj: Boolean;
    procedure _SetIsp_otd_stoimostj(const NewValue: Boolean);
    function _Get_M_Otdeljn_stoim: TBAFloat;
    function _GetOtdeljn_stoim: double;
    procedure _SetOtdeljn_stoim(const NewValue: double);
    function _Get_M_Na_dop_meste: TBABoolean;
    function _GetNa_dop_meste: Boolean;
    procedure _SetNa_dop_meste(const NewValue: Boolean);
    function _Get_M_Stoim_na_chel_vychisl: TBAFloat;
    function _GetStoim_na_chel_vychisl: double;
    function _Get_M_Summa: TBAFloat;
    function _GetSumma: double;
    function _Getsovm_givyot_s: TProgivanie;
    function _Get_M_sovm_givyot_s: TBoldObjectReference;
    procedure _Setsovm_givyot_s(const value: TProgivanie);
    function _Getotvech_za_progivanie: TProgivanieList;
    function _GetOtd_chel_imeet_skidki: TDiscont_politikaList;
    function _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList;
    function _Getispoljz_obychn_skidki: TSkidkiList;
    function _Getispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList;
    function _GetProgivaet_soglasno: TList_klienta;
    function _Get_M_Progivaet_soglasno: TBoldObjectReference;
    function _GetOpis_prog_klienta: TKlient;
    function _Get_M_Opis_prog_klienta: TBoldObjectReference;
  protected
  public
    property M_Vyselen: TBABoolean read _Get_M_Vyselen;
    property M_Kolichestvo_dnei_progiv: TBAFloat read _Get_M_Kolichestvo_dnei_progiv;
    property M_Otdeljno: TBABoolean read _Get_M_Otdeljno;
    property M_Do_daty: TBADateTime read _Get_M_Do_daty;
    property M_S_daty: TBADateTime read _Get_M_S_daty;
    property M_Isp_otd_stoimostj: TBABoolean read _Get_M_Isp_otd_stoimostj;
    property M_Otdeljn_stoim: TBAFloat read _Get_M_Otdeljn_stoim;
    property M_Na_dop_meste: TBABoolean read _Get_M_Na_dop_meste;
    property M_Stoim_na_chel_vychisl: TBAFloat read _Get_M_Stoim_na_chel_vychisl;
    property M_Summa: TBAFloat read _Get_M_Summa;
    property M_sovm_givyot_s: TBoldObjectReference read _Get_M_sovm_givyot_s;
    property M_otvech_za_progivanie: TProgivanieList read _Getotvech_za_progivanie;
    property M_Otd_chel_imeet_skidki: TDiscont_politikaList read _GetOtd_chel_imeet_skidki;
    property M_Otd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList read _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    property M_ispoljz_obychn_skidki: TSkidkiList read _Getispoljz_obychn_skidki;
    property M_ispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList read _Getispoljz_obychn_skidkinapryamuyu_ocenivaet;
    property M_Progivaet_soglasno: TBoldObjectReference read _Get_M_Progivaet_soglasno;
    property M_Opis_prog_klienta: TBoldObjectReference read _Get_M_Opis_prog_klienta;
    property Vyselen: Boolean read _GetVyselen write _SetVyselen;
    property Kolichestvo_dnei_progiv: double read _GetKolichestvo_dnei_progiv write _SetKolichestvo_dnei_progiv;
    property Otdeljno: Boolean read _GetOtdeljno write _SetOtdeljno;
    property Do_daty: TDateTime read _GetDo_daty write _SetDo_daty;
    property S_daty: TDateTime read _GetS_daty write _SetS_daty;
    property Isp_otd_stoimostj: Boolean read _GetIsp_otd_stoimostj write _SetIsp_otd_stoimostj;
    property Otdeljn_stoim: double read _GetOtdeljn_stoim write _SetOtdeljn_stoim;
    property Na_dop_meste: Boolean read _GetNa_dop_meste write _SetNa_dop_meste;
    property Stoim_na_chel_vychisl: double read _GetStoim_na_chel_vychisl;
    property Summa: double read _GetSumma;
    property sovm_givyot_s: TProgivanie read _Getsovm_givyot_s write _Setsovm_givyot_s;
    property otvech_za_progivanie: TProgivanieList read _Getotvech_za_progivanie;
    property Otd_chel_imeet_skidki: TDiscont_politikaList read _GetOtd_chel_imeet_skidki;
    property Otd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList read _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    property ispoljz_obychn_skidki: TSkidkiList read _Getispoljz_obychn_skidki;
    property ispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList read _Getispoljz_obychn_skidkinapryamuyu_ocenivaet;
    property Progivaet_soglasno: TList_klienta read _GetProgivaet_soglasno;
    property Opis_prog_klienta: TKlient read _GetOpis_prog_klienta;
  end;

  TSpravochnik = class(TBusinessClassesRoot)
  private
    function _Get_M_Naimenovanie: TBAString;
    function _GetNaimenovanie: String;
    procedure _SetNaimenovanie(const NewValue: String);
    function _Get_M_Kommentarii: TBAString;
    function _GetKommentarii: String;
    procedure _SetKommentarii(const NewValue: String);
  protected
  public
    property M_Naimenovanie: TBAString read _Get_M_Naimenovanie;
    property M_Kommentarii: TBAString read _Get_M_Kommentarii;
    property Naimenovanie: String read _GetNaimenovanie write _SetNaimenovanie;
    property Kommentarii: String read _GetKommentarii write _SetKommentarii;
  end;

  TOrganizaciya = class(TPersona)
  private
    function _Get_M_Strana: TBAString;
    function _GetStrana: String;
    procedure _SetStrana(const NewValue: String);
    function _Get_M_Oblastj: TBAString;
    function _GetOblastj: String;
    procedure _SetOblastj(const NewValue: String);
    function _Get_M_Gorod: TBAString;
    function _GetGorod: String;
    procedure _SetGorod(const NewValue: String);
    function _Get_M_BIK: TBAString;
    function _GetBIK: String;
    procedure _SetBIK(const NewValue: String);
    function _Get_M_Naimenovanie: TBAString;
    function _GetNaimenovanie: String;
    procedure _SetNaimenovanie(const NewValue: String);
    function _Get_M_YavlyaetsyaVlad: TBABoolean;
    function _GetYavlyaetsyaVlad: Boolean;
    procedure _SetYavlyaetsyaVlad(const NewValue: Boolean);
    function _Get_M_Rukovoditelj: TBAString;
    function _GetRukovoditelj: String;
    procedure _SetRukovoditelj(const NewValue: String);
    function _Get_M_GlBuhgalter: TBAString;
    function _GetGlBuhgalter: String;
    procedure _SetGlBuhgalter(const NewValue: String);
    function _Get_M_INN: TBAString;
    function _GetINN: String;
    procedure _SetINN(const NewValue: String);
    function _Get_M_Rasch__schet: TBAString;
    function _GetRasch__schet: String;
    procedure _SetRasch__schet(const NewValue: String);
    function _Get_M_KPP: TBAString;
    function _GetKPP: String;
    procedure _SetKPP(const NewValue: String);
    function _Get_M_Tip_organizacii: TBAString;
    function _GetTip_organizacii: String;
    procedure _SetTip_organizacii(const NewValue: String);
    function _Get_M_Kor_schet: TBAString;
    function _GetKor_schet: String;
    procedure _SetKor_schet(const NewValue: String);
    function _Get_M_Naim__banka: TBAString;
    function _GetNaim__banka: String;
    procedure _SetNaim__banka(const NewValue: String);
  protected
    procedure _Propiska_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); override;
  public
    property M_Strana: TBAString read _Get_M_Strana;
    property M_Oblastj: TBAString read _Get_M_Oblastj;
    property M_Gorod: TBAString read _Get_M_Gorod;
    property M_BIK: TBAString read _Get_M_BIK;
    property M_Naimenovanie: TBAString read _Get_M_Naimenovanie;
    property M_YavlyaetsyaVlad: TBABoolean read _Get_M_YavlyaetsyaVlad;
    property M_Rukovoditelj: TBAString read _Get_M_Rukovoditelj;
    property M_GlBuhgalter: TBAString read _Get_M_GlBuhgalter;
    property M_INN: TBAString read _Get_M_INN;
    property M_Rasch__schet: TBAString read _Get_M_Rasch__schet;
    property M_KPP: TBAString read _Get_M_KPP;
    property M_Tip_organizacii: TBAString read _Get_M_Tip_organizacii;
    property M_Kor_schet: TBAString read _Get_M_Kor_schet;
    property M_Naim__banka: TBAString read _Get_M_Naim__banka;
    property Strana: String read _GetStrana write _SetStrana;
    property Oblastj: String read _GetOblastj write _SetOblastj;
    property Gorod: String read _GetGorod write _SetGorod;
    property BIK: String read _GetBIK write _SetBIK;
    property Naimenovanie: String read _GetNaimenovanie write _SetNaimenovanie;
    property YavlyaetsyaVlad: Boolean read _GetYavlyaetsyaVlad write _SetYavlyaetsyaVlad;
    property Rukovoditelj: String read _GetRukovoditelj write _SetRukovoditelj;
    property GlBuhgalter: String read _GetGlBuhgalter write _SetGlBuhgalter;
    property INN: String read _GetINN write _SetINN;
    property Rasch__schet: String read _GetRasch__schet write _SetRasch__schet;
    property KPP: String read _GetKPP write _SetKPP;
    property Tip_organizacii: String read _GetTip_organizacii write _SetTip_organizacii;
    property Kor_schet: String read _GetKor_schet write _SetKor_schet;
    property Naim__banka: String read _GetNaim__banka write _SetNaim__banka;
  end;

  TPrihodnyi_order = class(TPrihodn_dokument)
  private
    function _Get_M_Debet: TBAString;
    function _GetDebet: String;
    procedure _SetDebet(const NewValue: String);
    function _Get_M_Korrespondir_schyot: TBAString;
    function _GetKorrespondir_schyot: String;
    procedure _SetKorrespondir_schyot(const NewValue: String);
    function _Get_M_Kod_analitich_uch: TBAString;
    function _GetKod_analitich_uch: String;
    procedure _SetKod_analitich_uch(const NewValue: String);
    function _Get_M_Kod_celev_naznach: TBAString;
    function _GetKod_celev_naznach: String;
    procedure _SetKod_celev_naznach(const NewValue: String);
    function _Get_M_Summa: TBAFloat;
    function _GetSumma: double;
    procedure _SetSumma(const NewValue: double);
    function _Get_M_Data_prihoda: TBADateTime;
    function _GetData_prihoda: TDateTime;
    procedure _SetData_prihoda(const NewValue: TDateTime);
    function _Get_M_Predvarit: TBABoolean;
    function _GetPredvarit: Boolean;
    procedure _SetPredvarit(const NewValue: Boolean);
    function _Getfiksiruet_oplatu_dlya: TList_klienta;
    function _Get_M_fiksiruet_oplatu_dlya: TBoldObjectReference;
    procedure _Setfiksiruet_oplatu_dlya(const value: TList_klienta);
    function _Getopis_prihod_po: TOtelj;
    function _Get_M_opis_prihod_po: TBoldObjectReference;
    procedure _Setopis_prihod_po(const value: TOtelj);
  protected
    procedure _Vsego_dohod_s_arendy_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); override;
  public
    property M_Debet: TBAString read _Get_M_Debet;
    property M_Korrespondir_schyot: TBAString read _Get_M_Korrespondir_schyot;
    property M_Kod_analitich_uch: TBAString read _Get_M_Kod_analitich_uch;
    property M_Kod_celev_naznach: TBAString read _Get_M_Kod_celev_naznach;
    property M_Summa: TBAFloat read _Get_M_Summa;
    property M_Data_prihoda: TBADateTime read _Get_M_Data_prihoda;
    property M_Predvarit: TBABoolean read _Get_M_Predvarit;
    property M_fiksiruet_oplatu_dlya: TBoldObjectReference read _Get_M_fiksiruet_oplatu_dlya;
    property M_opis_prihod_po: TBoldObjectReference read _Get_M_opis_prihod_po;
    property Debet: String read _GetDebet write _SetDebet;
    property Korrespondir_schyot: String read _GetKorrespondir_schyot write _SetKorrespondir_schyot;
    property Kod_analitich_uch: String read _GetKod_analitich_uch write _SetKod_analitich_uch;
    property Kod_celev_naznach: String read _GetKod_celev_naznach write _SetKod_celev_naznach;
    property Summa: double read _GetSumma write _SetSumma;
    property Data_prihoda: TDateTime read _GetData_prihoda write _SetData_prihoda;
    property Predvarit: Boolean read _GetPredvarit write _SetPredvarit;
    property fiksiruet_oplatu_dlya: TList_klienta read _Getfiksiruet_oplatu_dlya write _Setfiksiruet_oplatu_dlya;
    property opis_prihod_po: TOtelj read _Getopis_prihod_po write _Setopis_prihod_po;
  end;

  TDiscont_politika = class(TSpravochnik)
  private
    function _Get_M_Ot_cen_politiki: TBABoolean;
    function _GetOt_cen_politiki: Boolean;
    function _Get_M_Ot_klassa_nomerov: TBABoolean;
    function _GetOt_klassa_nomerov: Boolean;
    function _Get_M_Ot_nomera: TBABoolean;
    function _GetOt_nomera: Boolean;
    function _Get_M_Cena: TBAFloat;
    function _GetCena: double;
    function _Get_M_S_daty: TBADate;
    function _GetS_daty: TDate;
    procedure _SetS_daty(const NewValue: TDate);
    function _Get_M_Dni: TBAInteger;
    function _GetDni: Integer;
    procedure _SetDni(const NewValue: Integer);
    function _GetPredost_diskont_v: TList_klientaList;
    function _GetLinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList;
    function _GetSkidka_kak_prog_otd_chel: TProgivanieList;
    function _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList;
    function _GetRasschit_cherez: TSkidkiList;
  protected
    procedure _Ot_cen_politiki_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    procedure _Ot_klassa_nomerov_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    procedure _Ot_nomera_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    procedure _Cena_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Ot_cen_politiki: TBABoolean read _Get_M_Ot_cen_politiki;
    property M_Ot_klassa_nomerov: TBABoolean read _Get_M_Ot_klassa_nomerov;
    property M_Ot_nomera: TBABoolean read _Get_M_Ot_nomera;
    property M_Cena: TBAFloat read _Get_M_Cena;
    property M_S_daty: TBADate read _Get_M_S_daty;
    property M_Dni: TBAInteger read _Get_M_Dni;
    property M_Predost_diskont_v: TList_klientaList read _GetPredost_diskont_v;
    property M_LinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList read _GetLinkPredost_diskont_vPredost_diskont;
    property M_Skidka_kak_prog_otd_chel: TProgivanieList read _GetSkidka_kak_prog_otd_chel;
    property M_Otd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList read _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    property M_Rasschit_cherez: TSkidkiList read _GetRasschit_cherez;
    property Ot_cen_politiki: Boolean read _GetOt_cen_politiki;
    property Ot_klassa_nomerov: Boolean read _GetOt_klassa_nomerov;
    property Ot_nomera: Boolean read _GetOt_nomera;
    property Cena: double read _GetCena;
    property S_daty: TDate read _GetS_daty write _SetS_daty;
    property Dni: Integer read _GetDni write _SetDni;
    property Predost_diskont_v: TList_klientaList read _GetPredost_diskont_v;
    property LinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList read _GetLinkPredost_diskont_vPredost_diskont;
    property Skidka_kak_prog_otd_chel: TProgivanieList read _GetSkidka_kak_prog_otd_chel;
    property Otd_chel_imeet_skidkiSkidka_kak_prog_otd_chel: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList read _GetOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    property Rasschit_cherez: TSkidkiList read _GetRasschit_cherez;
  end;

  TDolgnostj = class(TSpravochnik)
  private
    function _Getopr_dolgnostj_dlya: TPersonalList;
  protected
  public
    property M_opr_dolgnostj_dlya: TPersonalList read _Getopr_dolgnostj_dlya;
    property opr_dolgnostj_dlya: TPersonalList read _Getopr_dolgnostj_dlya;
  end;

  TKlass_nomera = class(TSpravochnik)
  private
    function _Get_M_Bazovaya_cena: TBAFloat;
    function _GetBazovaya_cena: double;
    procedure _SetBazovaya_cena(const NewValue: double);
    function _Get_M_Kompleksnaya_cena: TBAFloat;
    function _GetKompleksnaya_cena: double;
    function _Get_M_Komnata_ogid: TBABoolean;
    function _GetKomnata_ogid: Boolean;
    procedure _SetKomnata_ogid(const NewValue: Boolean);
    function _Get_M_Cvet_fona_klassa: TBAString;
    function _GetCvet_fona_klassa: String;
    procedure _SetCvet_fona_klassa(const NewValue: String);
    function _Get_M_Cvet_teksta_klassa: TBAString;
    function _GetCvet_teksta_klassa: String;
    procedure _SetCvet_teksta_klassa(const NewValue: String);
    function _Get_M_Zarabotano_za_period: TBAFloat;
    function _GetZarabotano_za_period: double;
    function _Get_M_Identifikator_otelya: TBAInteger;
    function _GetIdentifikator_otelya: Integer;
    function _Get_M_Nachalo_intervala: TBADateTime;
    function _GetNachalo_intervala: TDateTime;
    function _Get_M_Konec_intervala: TBADateTime;
    function _GetKonec_intervala: TDateTime;
    function _Get_M_Vych_za_sezon: TBABoolean;
    function _GetVych_za_sezon: Boolean;
    function _Get_M_Tek_vremya: TBADateTime;
    function _GetTek_vremya: TDateTime;
    function _Get_M_Ispoljz_opcii: TBABoolean;
    function _GetIspoljz_opcii: Boolean;
    procedure _SetIspoljz_opcii(const NewValue: Boolean);
    function _Get_M_Uchit_cenov_politiku: TBABoolean;
    function _GetUchit_cenov_politiku: Boolean;
    procedure _SetUchit_cenov_politiku(const NewValue: Boolean);
    function _Get_M_Stoim_na_chel_v_sutki: TBAFloat;
    function _GetStoim_na_chel_v_sutki: double;
    procedure _SetStoim_na_chel_v_sutki(const NewValue: double);
    function _Get_M_calcprice: TBAFloat;
    function _Getcalcprice: double;
    function _Get_M_Chel_v_nomere: TBAInteger;
    function _GetChel_v_nomere: Integer;
    procedure _SetChel_v_nomere(const NewValue: Integer);
    function _Get_M_Maks_chelovek: TBAInteger;
    function _GetMaks_chelovek: Integer;
    procedure _SetMaks_chelovek(const NewValue: Integer);
    function _Get_M_Kol_dop_mest: TBAInteger;
    function _GetKol_dop_mest: Integer;
    procedure _SetKol_dop_mest(const NewValue: Integer);
    function _Get_M_Stoim_na_chel_vychisl: TBAFloat;
    function _GetStoim_na_chel_vychisl: double;
    function _GetVklyuchaet_opcii: TOpciiya_urovnyaList;
    function _GetOpredelyaet_urovenj: TNomer_arendyList;
    function _GetImeet_bazovuyu_stoimostj: TCenovaya_politikaList;
    function _Getklass_ispoljz_nastr: TNastroiki;
    function _Get_M_klass_ispoljz_nastr: TBoldObjectReference;
    procedure _Setklass_ispoljz_nastr(const value: TNastroiki);
  protected
    procedure _Stoim_na_chel_vychisl_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Bazovaya_cena: TBAFloat read _Get_M_Bazovaya_cena;
    property M_Kompleksnaya_cena: TBAFloat read _Get_M_Kompleksnaya_cena;
    property M_Komnata_ogid: TBABoolean read _Get_M_Komnata_ogid;
    property M_Cvet_fona_klassa: TBAString read _Get_M_Cvet_fona_klassa;
    property M_Cvet_teksta_klassa: TBAString read _Get_M_Cvet_teksta_klassa;
    property M_Zarabotano_za_period: TBAFloat read _Get_M_Zarabotano_za_period;
    property M_Identifikator_otelya: TBAInteger read _Get_M_Identifikator_otelya;
    property M_Nachalo_intervala: TBADateTime read _Get_M_Nachalo_intervala;
    property M_Konec_intervala: TBADateTime read _Get_M_Konec_intervala;
    property M_Vych_za_sezon: TBABoolean read _Get_M_Vych_za_sezon;
    property M_Tek_vremya: TBADateTime read _Get_M_Tek_vremya;
    property M_Ispoljz_opcii: TBABoolean read _Get_M_Ispoljz_opcii;
    property M_Uchit_cenov_politiku: TBABoolean read _Get_M_Uchit_cenov_politiku;
    property M_Stoim_na_chel_v_sutki: TBAFloat read _Get_M_Stoim_na_chel_v_sutki;
    property M_calcprice: TBAFloat read _Get_M_calcprice;
    property M_Chel_v_nomere: TBAInteger read _Get_M_Chel_v_nomere;
    property M_Maks_chelovek: TBAInteger read _Get_M_Maks_chelovek;
    property M_Kol_dop_mest: TBAInteger read _Get_M_Kol_dop_mest;
    property M_Stoim_na_chel_vychisl: TBAFloat read _Get_M_Stoim_na_chel_vychisl;
    property M_Vklyuchaet_opcii: TOpciiya_urovnyaList read _GetVklyuchaet_opcii;
    property M_Opredelyaet_urovenj: TNomer_arendyList read _GetOpredelyaet_urovenj;
    property M_Imeet_bazovuyu_stoimostj: TCenovaya_politikaList read _GetImeet_bazovuyu_stoimostj;
    property M_klass_ispoljz_nastr: TBoldObjectReference read _Get_M_klass_ispoljz_nastr;
    property Bazovaya_cena: double read _GetBazovaya_cena write _SetBazovaya_cena;
    property Kompleksnaya_cena: double read _GetKompleksnaya_cena;
    property Komnata_ogid: Boolean read _GetKomnata_ogid write _SetKomnata_ogid;
    property Cvet_fona_klassa: String read _GetCvet_fona_klassa write _SetCvet_fona_klassa;
    property Cvet_teksta_klassa: String read _GetCvet_teksta_klassa write _SetCvet_teksta_klassa;
    property Zarabotano_za_period: double read _GetZarabotano_za_period;
    property Identifikator_otelya: Integer read _GetIdentifikator_otelya;
    property Nachalo_intervala: TDateTime read _GetNachalo_intervala;
    property Konec_intervala: TDateTime read _GetKonec_intervala;
    property Vych_za_sezon: Boolean read _GetVych_za_sezon;
    property Tek_vremya: TDateTime read _GetTek_vremya;
    property Ispoljz_opcii: Boolean read _GetIspoljz_opcii write _SetIspoljz_opcii;
    property Uchit_cenov_politiku: Boolean read _GetUchit_cenov_politiku write _SetUchit_cenov_politiku;
    property Stoim_na_chel_v_sutki: double read _GetStoim_na_chel_v_sutki write _SetStoim_na_chel_v_sutki;
    property calcprice: double read _Getcalcprice;
    property Chel_v_nomere: Integer read _GetChel_v_nomere write _SetChel_v_nomere;
    property Maks_chelovek: Integer read _GetMaks_chelovek write _SetMaks_chelovek;
    property Kol_dop_mest: Integer read _GetKol_dop_mest write _SetKol_dop_mest;
    property Stoim_na_chel_vychisl: double read _GetStoim_na_chel_vychisl;
    property Vklyuchaet_opcii: TOpciiya_urovnyaList read _GetVklyuchaet_opcii;
    property Opredelyaet_urovenj: TNomer_arendyList read _GetOpredelyaet_urovenj;
    property Imeet_bazovuyu_stoimostj: TCenovaya_politikaList read _GetImeet_bazovuyu_stoimostj;
    property klass_ispoljz_nastr: TNastroiki read _Getklass_ispoljz_nastr write _Setklass_ispoljz_nastr;
  end;

  TKorpus = class(TSpravochnik)
  private
    function _Getvmeshaet_nomera: TNomer_arendyList;
    function _Getyavl_chastjyu_otelya: TOtelj;
    function _Get_M_yavl_chastjyu_otelya: TBoldObjectReference;
    procedure _Setyavl_chastjyu_otelya(const value: TOtelj);
  protected
  public
    property M_vmeshaet_nomera: TNomer_arendyList read _Getvmeshaet_nomera;
    property M_yavl_chastjyu_otelya: TBoldObjectReference read _Get_M_yavl_chastjyu_otelya;
    property vmeshaet_nomera: TNomer_arendyList read _Getvmeshaet_nomera;
    property yavl_chastjyu_otelya: TOtelj read _Getyavl_chastjyu_otelya write _Setyavl_chastjyu_otelya;
  end;

  TOpciiya_urovnya = class(TSpravochnik)
  private
    function _Get_M_Nadbavka_po_cene: TBAFloat;
    function _GetNadbavka_po_cene: double;
    procedure _SetNadbavka_po_cene(const NewValue: double);
    function _Get_M_Koefficient: TBAFloat;
    function _GetKoefficient: double;
    procedure _SetKoefficient(const NewValue: double);
    function _Get_M_addprice: TBAFloat;
    function _Getaddprice: double;
    function _GetVklyuchaetsya_v_klassah: TKlass_nomera;
    function _Get_M_Vklyuchaetsya_v_klassah: TBoldObjectReference;
    procedure _SetVklyuchaetsya_v_klassah(const value: TKlass_nomera);
  protected
  public
    property M_Nadbavka_po_cene: TBAFloat read _Get_M_Nadbavka_po_cene;
    property M_Koefficient: TBAFloat read _Get_M_Koefficient;
    property M_addprice: TBAFloat read _Get_M_addprice;
    property M_Vklyuchaetsya_v_klassah: TBoldObjectReference read _Get_M_Vklyuchaetsya_v_klassah;
    property Nadbavka_po_cene: double read _GetNadbavka_po_cene write _SetNadbavka_po_cene;
    property Koefficient: double read _GetKoefficient write _SetKoefficient;
    property addprice: double read _Getaddprice;
    property Vklyuchaetsya_v_klassah: TKlass_nomera read _GetVklyuchaetsya_v_klassah write _SetVklyuchaetsya_v_klassah;
  end;

  TOtelj = class(TSpravochnik)
  private
    function _Get_M_Zarabotano_za_period: TBAFloat;
    function _GetZarabotano_za_period: double;
    function _Get_M_Rashod_za_period: TBAFloat;
    function _GetRashod_za_period: double;
    function _Get_M_Balans: TBAFloat;
    function _GetBalans: double;
    function _Get_M_Identifikator_otelya: TBAInteger;
    function _GetIdentifikator_otelya: Integer;
    procedure _SetIdentifikator_otelya(const NewValue: Integer);
    function _Get_M_Prihod_za_period: TBAFloat;
    function _GetPrihod_za_period: double;
    function _Get_M_Nachalo_intervala: TBADateTime;
    function _GetNachalo_intervala: TDateTime;
    function _Get_M_Konec_intervala: TBADateTime;
    function _GetKonec_intervala: TDateTime;
    function _Get_M_Vych_za_sezon: TBABoolean;
    function _GetVych_za_sezon: Boolean;
    function _Get_M_Vsego_prihod: TBAFloat;
    function _GetVsego_prihod: double;
    function _Get_M_Vsego_rashod: TBAFloat;
    function _GetVsego_rashod: double;
    function _Get_M_Balans_period: TBAFloat;
    function _GetBalans_period: double;
    function _Getimeet_nomera: TNomer_arendyList;
    function _Getimeet_stroki_rashoda: TRash_dokumentList;
    function _Getimet_stroki_prihoda: TPrihodnyi_orderList;
    function _Getimeet_korpusa: TKorpusList;
  protected
  public
    property M_Zarabotano_za_period: TBAFloat read _Get_M_Zarabotano_za_period;
    property M_Rashod_za_period: TBAFloat read _Get_M_Rashod_za_period;
    property M_Balans: TBAFloat read _Get_M_Balans;
    property M_Identifikator_otelya: TBAInteger read _Get_M_Identifikator_otelya;
    property M_Prihod_za_period: TBAFloat read _Get_M_Prihod_za_period;
    property M_Nachalo_intervala: TBADateTime read _Get_M_Nachalo_intervala;
    property M_Konec_intervala: TBADateTime read _Get_M_Konec_intervala;
    property M_Vych_za_sezon: TBABoolean read _Get_M_Vych_za_sezon;
    property M_Vsego_prihod: TBAFloat read _Get_M_Vsego_prihod;
    property M_Vsego_rashod: TBAFloat read _Get_M_Vsego_rashod;
    property M_Balans_period: TBAFloat read _Get_M_Balans_period;
    property M_imeet_nomera: TNomer_arendyList read _Getimeet_nomera;
    property M_imeet_stroki_rashoda: TRash_dokumentList read _Getimeet_stroki_rashoda;
    property M_imet_stroki_prihoda: TPrihodnyi_orderList read _Getimet_stroki_prihoda;
    property M_imeet_korpusa: TKorpusList read _Getimeet_korpusa;
    property Zarabotano_za_period: double read _GetZarabotano_za_period;
    property Rashod_za_period: double read _GetRashod_za_period;
    property Balans: double read _GetBalans;
    property Identifikator_otelya: Integer read _GetIdentifikator_otelya write _SetIdentifikator_otelya;
    property Prihod_za_period: double read _GetPrihod_za_period;
    property Nachalo_intervala: TDateTime read _GetNachalo_intervala;
    property Konec_intervala: TDateTime read _GetKonec_intervala;
    property Vych_za_sezon: Boolean read _GetVych_za_sezon;
    property Vsego_prihod: double read _GetVsego_prihod;
    property Vsego_rashod: double read _GetVsego_rashod;
    property Balans_period: double read _GetBalans_period;
    property imeet_nomera: TNomer_arendyList read _Getimeet_nomera;
    property imeet_stroki_rashoda: TRash_dokumentList read _Getimeet_stroki_rashoda;
    property imet_stroki_prihoda: TPrihodnyi_orderList read _Getimet_stroki_prihoda;
    property imeet_korpusa: TKorpusList read _Getimeet_korpusa;
  end;

  TRash_dokument = class(TSpravochnik)
  private
    function _Get_M_Summa: TBAFloat;
    function _GetSumma: double;
    procedure _SetSumma(const NewValue: double);
    function _Get_M_Procent_otchisl_ot_oplaty: TBAFloat;
    function _GetProcent_otchisl_ot_oplaty: double;
    procedure _SetProcent_otchisl_ot_oplaty(const NewValue: double);
    function _Get_M_Yavl_rash_dostavshiku: TBABoolean;
    function _GetYavl_rash_dostavshiku: Boolean;
    procedure _SetYavl_rash_dostavshiku(const NewValue: Boolean);
    function _Get_M_Data_rashoda: TBADateTime;
    function _GetData_rashoda: TDateTime;
    procedure _SetData_rashoda(const NewValue: TDateTime);
    function _Get_M_Summa_dostavki: TBAFloat;
    function _GetSumma_dostavki: double;
    function _Get_M_Summa_rashoda: TBAFloat;
    function _GetSumma_rashoda: double;
    function _Getopis_rashod_po: TOtelj;
    function _Get_M_opis_rashod_po: TBoldObjectReference;
    procedure _Setopis_rashod_po(const value: TOtelj);
    function _Getoforml_pri: TPersonal;
    function _Get_M_oforml_pri: TBoldObjectReference;
    procedure _Setoforml_pri(const value: TPersonal);
  protected
  public
    property M_Summa: TBAFloat read _Get_M_Summa;
    property M_Procent_otchisl_ot_oplaty: TBAFloat read _Get_M_Procent_otchisl_ot_oplaty;
    property M_Yavl_rash_dostavshiku: TBABoolean read _Get_M_Yavl_rash_dostavshiku;
    property M_Data_rashoda: TBADateTime read _Get_M_Data_rashoda;
    property M_Summa_dostavki: TBAFloat read _Get_M_Summa_dostavki;
    property M_Summa_rashoda: TBAFloat read _Get_M_Summa_rashoda;
    property M_opis_rashod_po: TBoldObjectReference read _Get_M_opis_rashod_po;
    property M_oforml_pri: TBoldObjectReference read _Get_M_oforml_pri;
    property Summa: double read _GetSumma write _SetSumma;
    property Procent_otchisl_ot_oplaty: double read _GetProcent_otchisl_ot_oplaty write _SetProcent_otchisl_ot_oplaty;
    property Yavl_rash_dostavshiku: Boolean read _GetYavl_rash_dostavshiku write _SetYavl_rash_dostavshiku;
    property Data_rashoda: TDateTime read _GetData_rashoda write _SetData_rashoda;
    property Summa_dostavki: double read _GetSumma_dostavki;
    property Summa_rashoda: double read _GetSumma_rashoda;
    property opis_rashod_po: TOtelj read _Getopis_rashod_po write _Setopis_rashod_po;
    property oforml_pri: TPersonal read _Getoforml_pri write _Setoforml_pri;
  end;

  TSkidki = class(TSpravochnik)
  private
    function _Get_M_Chislo_dnei: TBAFloat;
    function _GetChislo_dnei: double;
    procedure _SetChislo_dnei(const NewValue: double);
    function _Get_M_Procent_skidki: TBAFloat;
    function _GetProcent_skidki: double;
    procedure _SetProcent_skidki(const NewValue: double);
    function _Get_M_Abs_skidka: TBAFloat;
    function _GetAbs_skidka: double;
    procedure _SetAbs_skidka(const NewValue: double);
    function _Get_M_Diskont_stoim: TBAFloat;
    function _GetDiskont_stoim: double;
    procedure _SetDiskont_stoim(const NewValue: double);
    function _Get_M_Isp_disk_stoim: TBABoolean;
    function _GetIsp_disk_stoim: Boolean;
    procedure _SetIsp_disk_stoim(const NewValue: Boolean);
    function _Get_M_Cena: TBAFloat;
    function _GetCena: double;
    function _GetYavl_osnov_dlya_rasch: TDiscont_politika;
    function _Get_M_Yavl_osnov_dlya_rasch: TBoldObjectReference;
    procedure _SetYavl_osnov_dlya_rasch(const value: TDiscont_politika);
    function _GetVhodit_v_politiku: TCenovaya_politika;
    function _Get_M_Vhodit_v_politiku: TBoldObjectReference;
    procedure _SetVhodit_v_politiku(const value: TCenovaya_politika);
    function _Getnapryamuyu_ocenivaet: TProgivanieList;
    function _Getispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList;
  protected
    procedure _Cena_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Chislo_dnei: TBAFloat read _Get_M_Chislo_dnei;
    property M_Procent_skidki: TBAFloat read _Get_M_Procent_skidki;
    property M_Abs_skidka: TBAFloat read _Get_M_Abs_skidka;
    property M_Diskont_stoim: TBAFloat read _Get_M_Diskont_stoim;
    property M_Isp_disk_stoim: TBABoolean read _Get_M_Isp_disk_stoim;
    property M_Cena: TBAFloat read _Get_M_Cena;
    property M_Yavl_osnov_dlya_rasch: TBoldObjectReference read _Get_M_Yavl_osnov_dlya_rasch;
    property M_Vhodit_v_politiku: TBoldObjectReference read _Get_M_Vhodit_v_politiku;
    property M_napryamuyu_ocenivaet: TProgivanieList read _Getnapryamuyu_ocenivaet;
    property M_ispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList read _Getispoljz_obychn_skidkinapryamuyu_ocenivaet;
    property Chislo_dnei: double read _GetChislo_dnei write _SetChislo_dnei;
    property Procent_skidki: double read _GetProcent_skidki write _SetProcent_skidki;
    property Abs_skidka: double read _GetAbs_skidka write _SetAbs_skidka;
    property Diskont_stoim: double read _GetDiskont_stoim write _SetDiskont_stoim;
    property Isp_disk_stoim: Boolean read _GetIsp_disk_stoim write _SetIsp_disk_stoim;
    property Cena: double read _GetCena;
    property Yavl_osnov_dlya_rasch: TDiscont_politika read _GetYavl_osnov_dlya_rasch write _SetYavl_osnov_dlya_rasch;
    property Vhodit_v_politiku: TCenovaya_politika read _GetVhodit_v_politiku write _SetVhodit_v_politiku;
    property napryamuyu_ocenivaet: TProgivanieList read _Getnapryamuyu_ocenivaet;
    property ispoljz_obychn_skidkinapryamuyu_ocenivaet: Tispoljz_obychn_skidkinapryamuyu_ocenivaetList read _Getispoljz_obychn_skidkinapryamuyu_ocenivaet;
  end;

  TCenovaya_politika = class(TSpravochnik)
  private
    function _Get_M_Cena: TBAFloat;
    function _GetCena: double;
    procedure _SetCena(const NewValue: double);
    function _Get_M_istart: TBADate;
    function _Getistart: TDate;
    procedure _Setistart(const NewValue: TDate);
    function _Get_M_iend: TBADate;
    function _Getiend: TDate;
    procedure _Setiend(const NewValue: TDate);
    function _Get_M_Stoim_na_chel_v_sutki: TBAFloat;
    function _GetStoim_na_chel_v_sutki: double;
    procedure _SetStoim_na_chel_v_sutki(const NewValue: double);
    function _GetOpredelyaet_cenu_dlya: TKlass_nomera;
    function _Get_M_Opredelyaet_cenu_dlya: TBoldObjectReference;
    procedure _SetOpredelyaet_cenu_dlya(const value: TKlass_nomera);
    function _GetImeet_skidki: TSkidkiList;
  protected
  public
    property M_Cena: TBAFloat read _Get_M_Cena;
    property M_istart: TBADate read _Get_M_istart;
    property M_iend: TBADate read _Get_M_iend;
    property M_Stoim_na_chel_v_sutki: TBAFloat read _Get_M_Stoim_na_chel_v_sutki;
    property M_Opredelyaet_cenu_dlya: TBoldObjectReference read _Get_M_Opredelyaet_cenu_dlya;
    property M_Imeet_skidki: TSkidkiList read _GetImeet_skidki;
    property Cena: double read _GetCena write _SetCena;
    property istart: TDate read _Getistart write _Setistart;
    property iend: TDate read _Getiend write _Setiend;
    property Stoim_na_chel_v_sutki: double read _GetStoim_na_chel_v_sutki write _SetStoim_na_chel_v_sutki;
    property Opredelyaet_cenu_dlya: TKlass_nomera read _GetOpredelyaet_cenu_dlya write _SetOpredelyaet_cenu_dlya;
    property Imeet_skidki: TSkidkiList read _GetImeet_skidki;
  end;

  TKlient = class(TOrganizaciya)
  private
    function _Get_M_Yavl_yur_licom: TBABoolean;
    function _GetYavl_yur_licom: Boolean;
    procedure _SetYavl_yur_licom(const NewValue: Boolean);
    function _Get_M_Imenovanie: TBAString;
    function _GetImenovanie: String;
    function _Get_M_Adres: TBAString;
    function _GetAdres: String;
    function _Get_M_Telefony: TBAString;
    function _GetTelefony: String;
    function _Get_M_Ident_objekta_risunka: TBAInteger;
    function _GetIdent_objekta_risunka: Integer;
    procedure _SetIdent_objekta_risunka(const NewValue: Integer);
    function _Get_M_Inf_o_kliente: TBAString;
    function _GetInf_o_kliente: String;
    function _Get_M_V_ogidanii: TBABoolean;
    function _GetV_ogidanii: Boolean;
    function _Get_M_Vyselen: TBABoolean;
    function _GetVyselen: Boolean;
    function _Get_M_Chislo_progivanii: TBAInteger;
    function _GetChislo_progivanii: Integer;
    function _Get_M_Chislo_sovmestn_prog: TBAInteger;
    function _GetChislo_sovmestn_prog: Integer;
    procedure _SetChislo_sovmestn_prog(const NewValue: Integer);
    function _Get_M_Komment_sovm_progiv: TBAString;
    function _GetKomment_sovm_progiv: String;
    procedure _SetKomment_sovm_progiv(const NewValue: String);
    function _GetProgivaet_soglasno: TList_klientaList;
    function _GetProgivanie: TProgivanieList;
    function _Getoplachivaet: TList_klientaList;
    function _Getimeet_broni: TBronjList;
    function _Getgdet_soglasno: TOgidanieList;
  protected
    procedure _Propiska_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); override;
    procedure _Inf_o_kliente_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    procedure _Chislo_progivanii_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Yavl_yur_licom: TBABoolean read _Get_M_Yavl_yur_licom;
    property M_Imenovanie: TBAString read _Get_M_Imenovanie;
    property M_Adres: TBAString read _Get_M_Adres;
    property M_Telefony: TBAString read _Get_M_Telefony;
    property M_Ident_objekta_risunka: TBAInteger read _Get_M_Ident_objekta_risunka;
    property M_Inf_o_kliente: TBAString read _Get_M_Inf_o_kliente;
    property M_V_ogidanii: TBABoolean read _Get_M_V_ogidanii;
    property M_Vyselen: TBABoolean read _Get_M_Vyselen;
    property M_Chislo_progivanii: TBAInteger read _Get_M_Chislo_progivanii;
    property M_Chislo_sovmestn_prog: TBAInteger read _Get_M_Chislo_sovmestn_prog;
    property M_Komment_sovm_progiv: TBAString read _Get_M_Komment_sovm_progiv;
    property M_Progivaet_soglasno: TList_klientaList read _GetProgivaet_soglasno;
    property M_Progivanie: TProgivanieList read _GetProgivanie;
    property M_oplachivaet: TList_klientaList read _Getoplachivaet;
    property M_imeet_broni: TBronjList read _Getimeet_broni;
    property M_gdet_soglasno: TOgidanieList read _Getgdet_soglasno;
    property Yavl_yur_licom: Boolean read _GetYavl_yur_licom write _SetYavl_yur_licom;
    property Imenovanie: String read _GetImenovanie;
    property Adres: String read _GetAdres;
    property Telefony: String read _GetTelefony;
    property Ident_objekta_risunka: Integer read _GetIdent_objekta_risunka write _SetIdent_objekta_risunka;
    property Inf_o_kliente: String read _GetInf_o_kliente;
    property V_ogidanii: Boolean read _GetV_ogidanii;
    property Vyselen: Boolean read _GetVyselen;
    property Chislo_progivanii: Integer read _GetChislo_progivanii;
    property Chislo_sovmestn_prog: Integer read _GetChislo_sovmestn_prog write _SetChislo_sovmestn_prog;
    property Komment_sovm_progiv: String read _GetKomment_sovm_progiv write _SetKomment_sovm_progiv;
    property Progivaet_soglasno: TList_klientaList read _GetProgivaet_soglasno;
    property Progivanie: TProgivanieList read _GetProgivanie;
    property oplachivaet: TList_klientaList read _Getoplachivaet;
    property imeet_broni: TBronjList read _Getimeet_broni;
    property gdet_soglasno: TOgidanieList read _Getgdet_soglasno;
  end;

  TPersonal = class(TOrganizaciya)
  private
    function _Get_M_Login: TBAString;
    function _GetLogin: String;
    procedure _SetLogin(const NewValue: String);
    function _Get_M_Parolj: TBAString;
    function _GetParolj: String;
    procedure _SetParolj(const NewValue: String);
    function _Get_M_Prava: TBAInteger;
    function _GetPrava: Integer;
    procedure _SetPrava(const NewValue: Integer);
    function _Get_M_Kommentarii: TBAString;
    function _GetKommentarii: String;
    procedure _SetKommentarii(const NewValue: String);
    function _Get_M_Razreshitj_vsyo: TBABoolean;
    function _GetRazreshitj_vsyo: Boolean;
    procedure _SetRazreshitj_vsyo(const NewValue: Boolean);
    function _Get_M_Razresh_administr: TBABoolean;
    function _GetRazresh_administr: Boolean;
    procedure _SetRazresh_administr(const NewValue: Boolean);
    function _Get_M_Razresh_nastroiku_raboty: TBABoolean;
    function _GetRazresh_nastroiku_raboty: Boolean;
    procedure _SetRazresh_nastroiku_raboty(const NewValue: Boolean);
    function _Get_M_Razreshitj_prosmotr_logov: TBABoolean;
    function _GetRazreshitj_prosmotr_logov: Boolean;
    procedure _SetRazreshitj_prosmotr_logov(const NewValue: Boolean);
    function _Get_M_Razr_manip_klassov: TBABoolean;
    function _GetRazr_manip_klassov: Boolean;
    procedure _SetRazr_manip_klassov(const NewValue: Boolean);
    function _Get_M_Razreshitj_manip_nomerov: TBABoolean;
    function _GetRazreshitj_manip_nomerov: Boolean;
    procedure _SetRazreshitj_manip_nomerov(const NewValue: Boolean);
    function _Get_M_Razr_nastroiku_cennobraz: TBABoolean;
    function _GetRazr_nastroiku_cennobraz: Boolean;
    procedure _SetRazr_nastroiku_cennobraz(const NewValue: Boolean);
    function _Get_M_Razreshitj_manip_otelei: TBABoolean;
    function _GetRazreshitj_manip_otelei: Boolean;
    procedure _SetRazreshitj_manip_otelei(const NewValue: Boolean);
    function _Get_M_Razreshitj_udalenie_ostaljnogo: TBABoolean;
    function _GetRazreshitj_udalenie_ostaljnogo: Boolean;
    procedure _SetRazreshitj_udalenie_ostaljnogo(const NewValue: Boolean);
    function _Get_M_Razr_prav_redkomen_sprav: TBABoolean;
    function _GetRazr_prav_redkomen_sprav: Boolean;
    procedure _SetRazr_prav_redkomen_sprav(const NewValue: Boolean);
    function _Get_M_Razr_prav_oper_razdelov: TBABoolean;
    function _GetRazr_prav_oper_razdelov: Boolean;
    procedure _SetRazr_prav_oper_razdelov(const NewValue: Boolean);
    function _Get_M_Razr_prosm_finans_otchyotnosti: TBABoolean;
    function _GetRazr_prosm_finans_otchyotnosti: Boolean;
    procedure _SetRazr_prosm_finans_otchyotnosti(const NewValue: Boolean);
    function _Get_M_Razr_prosm_balans_znach: TBABoolean;
    function _GetRazr_prosm_balans_znach: Boolean;
    procedure _SetRazr_prosm_balans_znach(const NewValue: Boolean);
    function _Get_M_Identifikator_otelya: TBAInteger;
    function _GetIdentifikator_otelya: Integer;
    procedure _SetIdentifikator_otelya(const NewValue: Integer);
    function _Getdeistviya_fiksiruyutsya_v: TLog_operaciiList;
    function _Getrabotaet_na_dolgn: TDolgnostj;
    function _Get_M_rabotaet_na_dolgn: TBoldObjectReference;
    procedure _Setrabotaet_na_dolgn(const value: TDolgnostj);
    function _Getzanimaetsya: TList_klientaList;
    function _Getosush_rashody: TRash_dokumentList;
  protected
    procedure _Propiska_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); override;
  public
    property M_Login: TBAString read _Get_M_Login;
    property M_Parolj: TBAString read _Get_M_Parolj;
    property M_Prava: TBAInteger read _Get_M_Prava;
    property M_Kommentarii: TBAString read _Get_M_Kommentarii;
    property M_Razreshitj_vsyo: TBABoolean read _Get_M_Razreshitj_vsyo;
    property M_Razresh_administr: TBABoolean read _Get_M_Razresh_administr;
    property M_Razresh_nastroiku_raboty: TBABoolean read _Get_M_Razresh_nastroiku_raboty;
    property M_Razreshitj_prosmotr_logov: TBABoolean read _Get_M_Razreshitj_prosmotr_logov;
    property M_Razr_manip_klassov: TBABoolean read _Get_M_Razr_manip_klassov;
    property M_Razreshitj_manip_nomerov: TBABoolean read _Get_M_Razreshitj_manip_nomerov;
    property M_Razr_nastroiku_cennobraz: TBABoolean read _Get_M_Razr_nastroiku_cennobraz;
    property M_Razreshitj_manip_otelei: TBABoolean read _Get_M_Razreshitj_manip_otelei;
    property M_Razreshitj_udalenie_ostaljnogo: TBABoolean read _Get_M_Razreshitj_udalenie_ostaljnogo;
    property M_Razr_prav_redkomen_sprav: TBABoolean read _Get_M_Razr_prav_redkomen_sprav;
    property M_Razr_prav_oper_razdelov: TBABoolean read _Get_M_Razr_prav_oper_razdelov;
    property M_Razr_prosm_finans_otchyotnosti: TBABoolean read _Get_M_Razr_prosm_finans_otchyotnosti;
    property M_Razr_prosm_balans_znach: TBABoolean read _Get_M_Razr_prosm_balans_znach;
    property M_Identifikator_otelya: TBAInteger read _Get_M_Identifikator_otelya;
    property M_deistviya_fiksiruyutsya_v: TLog_operaciiList read _Getdeistviya_fiksiruyutsya_v;
    property M_rabotaet_na_dolgn: TBoldObjectReference read _Get_M_rabotaet_na_dolgn;
    property M_zanimaetsya: TList_klientaList read _Getzanimaetsya;
    property M_osush_rashody: TRash_dokumentList read _Getosush_rashody;
    property Login: String read _GetLogin write _SetLogin;
    property Parolj: String read _GetParolj write _SetParolj;
    property Prava: Integer read _GetPrava write _SetPrava;
    property Kommentarii: String read _GetKommentarii write _SetKommentarii;
    property Razreshitj_vsyo: Boolean read _GetRazreshitj_vsyo write _SetRazreshitj_vsyo;
    property Razresh_administr: Boolean read _GetRazresh_administr write _SetRazresh_administr;
    property Razresh_nastroiku_raboty: Boolean read _GetRazresh_nastroiku_raboty write _SetRazresh_nastroiku_raboty;
    property Razreshitj_prosmotr_logov: Boolean read _GetRazreshitj_prosmotr_logov write _SetRazreshitj_prosmotr_logov;
    property Razr_manip_klassov: Boolean read _GetRazr_manip_klassov write _SetRazr_manip_klassov;
    property Razreshitj_manip_nomerov: Boolean read _GetRazreshitj_manip_nomerov write _SetRazreshitj_manip_nomerov;
    property Razr_nastroiku_cennobraz: Boolean read _GetRazr_nastroiku_cennobraz write _SetRazr_nastroiku_cennobraz;
    property Razreshitj_manip_otelei: Boolean read _GetRazreshitj_manip_otelei write _SetRazreshitj_manip_otelei;
    property Razreshitj_udalenie_ostaljnogo: Boolean read _GetRazreshitj_udalenie_ostaljnogo write _SetRazreshitj_udalenie_ostaljnogo;
    property Razr_prav_redkomen_sprav: Boolean read _GetRazr_prav_redkomen_sprav write _SetRazr_prav_redkomen_sprav;
    property Razr_prav_oper_razdelov: Boolean read _GetRazr_prav_oper_razdelov write _SetRazr_prav_oper_razdelov;
    property Razr_prosm_finans_otchyotnosti: Boolean read _GetRazr_prosm_finans_otchyotnosti write _SetRazr_prosm_finans_otchyotnosti;
    property Razr_prosm_balans_znach: Boolean read _GetRazr_prosm_balans_znach write _SetRazr_prosm_balans_znach;
    property Identifikator_otelya: Integer read _GetIdentifikator_otelya write _SetIdentifikator_otelya;
    property deistviya_fiksiruyutsya_v: TLog_operaciiList read _Getdeistviya_fiksiruyutsya_v;
    property rabotaet_na_dolgn: TDolgnostj read _Getrabotaet_na_dolgn write _Setrabotaet_na_dolgn;
    property zanimaetsya: TList_klientaList read _Getzanimaetsya;
    property osush_rashody: TRash_dokumentList read _Getosush_rashody;
  end;

  TList_klienta = class(TRash_dokument)
  private
    function _Get_M_Data_vjezda: TBADate;
    function _GetData_vjezda: TDate;
    procedure _SetData_vjezda(const NewValue: TDate);
    function _Get_M_Data_vyezda: TBADate;
    function _GetData_vyezda: TDate;
    procedure _SetData_vyezda(const NewValue: TDate);
    function _Get_M_V_dnyah: TBAFloat;
    function _GetV_dnyah: double;
    procedure _SetV_dnyah(const NewValue: double);
    function _Get_M_V_dnyah_vych: TBAFloat;
    function _GetV_dnyah_vych: double;
    function _Get_M_Oplata_vsya: TBAFloat;
    function _GetOplata_vsya: double;
    function _Get_M_Vremeni_proshlo: TBAFloat;
    function _GetVremeni_proshlo: double;
    function _Get_M_Dnei_proshlo: TBAFloat;
    function _GetDnei_proshlo: double;
    function _Get_M_Stoimostj_proshlo: TBAFloat;
    function _GetStoimostj_proshlo: double;
    function _Get_M_Vremeni_ostalosj: TBAFloat;
    function _GetVremeni_ostalosj: double;
    function _Get_M_Dnei_ostalosj: TBAFloat;
    function _GetDnei_ostalosj: double;
    function _Get_M_Stoimostj_ostalosj: TBAFloat;
    function _GetStoimostj_ostalosj: double;
    function _Get_M_Oplacheno_vsego: TBAFloat;
    function _GetOplacheno_vsego: double;
    function _Get_M_Zadolgaet_klient: TBABoolean;
    function _GetZadolgaet_klient: Boolean;
    function _Get_M_Sverh_sroka: TBABoolean;
    function _GetSverh_sroka: Boolean;
    function _Get_M_Poseleno_chislo: TBAInteger;
    function _GetPoseleno_chislo: Integer;
    function _Get_M_Informaciya_o_klientah: TBAString;
    function _GetInformaciya_o_klientah: String;
    function _Get_M_Schitatj_po_kol_chelovek: TBABoolean;
    function _GetSchitatj_po_kol_chelovek: Boolean;
    procedure _SetSchitatj_po_kol_chelovek(const NewValue: Boolean);
    function _Get_M_Stoim_v_sutki_vychisl: TBAFloat;
    function _GetStoim_v_sutki_vychisl: double;
    procedure _SetStoim_v_sutki_vychisl(const NewValue: double);
    function _Get_M_Nachalo_intervala: TBADateTime;
    function _GetNachalo_intervala: TDateTime;
    function _Get_M_Konec_intervala: TBADateTime;
    function _GetKonec_intervala: TDateTime;
    function _Get_M_Summa_za_interval: TBAFloat;
    function _GetSumma_za_interval: double;
    function _Get_M_Odin_chas: TBAFloat;
    function _GetOdin_chas: double;
    function _Get_M_Odin_denj: TBAFloat;
    function _GetOdin_denj: double;
    function _Get_M_Tek_vremya: TBADateTime;
    function _GetTek_vremya: TDateTime;
    function _Get_M_Vremeni_vych: TBAFloat;
    function _GetVremeni_vych: double;
    function _Get_M_Vyezd_faktich: TBADateTime;
    function _GetVyezd_faktich: TDateTime;
    procedure _SetVyezd_faktich(const NewValue: TDateTime);
    function _Get_M_Osvobogdyon: TBABoolean;
    function _GetOsvobogdyon: Boolean;
    function _Get_M_Posl_dlya_nomera: TBABoolean;
    function _GetPosl_dlya_nomera: Boolean;
    function _Get_M_Oplata_vsya_s_dostavk: TBAFloat;
    function _GetOplata_vsya_s_dostavk: double;
    function _Get_M_Dolg_klient: TBAFloat;
    function _GetDolg_klient: double;
    function _Get_M_Dolya_zaversh: TBAFloat;
    function _GetDolya_zaversh: double;
    function _Get_M_Stoimostj_ustan: TBAFloat;
    function _GetStoimostj_ustan: double;
    procedure _SetStoimostj_ustan(const NewValue: double);
    function _Get_M_V_dnyah_proshlo_s_chas: TBAString;
    function _GetV_dnyah_proshlo_s_chas: String;
    function _Get_M_Chasov_ostat_po_mod: TBAFloat;
    function _GetChasov_ostat_po_mod: double;
    function _Get_M_Dnei_ostat_po_mod: TBAFloat;
    function _GetDnei_ostat_po_mod: double;
    function _Get_M_Dob_stoimostj_pereoc: TBAFloat;
    function _GetDob_stoimostj_pereoc: double;
    function _Get_M_Procent_otchisl_bronj: TBAFloat;
    function _GetProcent_otchisl_bronj: double;
    procedure _SetProcent_otchisl_bronj(const NewValue: double);
    function _Get_M_Summa_bronj: TBAFloat;
    function _GetSumma_bronj: double;
    procedure _SetSumma_bronj(const NewValue: double);
    function _Get_M_Na_vyselenie: TBABoolean;
    function _GetNa_vyselenie: Boolean;
    function _Get_M_Stoim_na_chel_v_sutki: TBAFloat;
    function _GetStoim_na_chel_v_sutki: double;
    procedure _SetStoim_na_chel_v_sutki(const NewValue: double);
    function _Get_M_Stoim_na_chel_vychisl: TBAFloat;
    function _GetStoim_na_chel_vychisl: double;
    function _Get_M_Schitatj_dlya_kagd: TBABoolean;
    function _GetSchitatj_dlya_kagd: Boolean;
    procedure _SetSchitatj_dlya_kagd(const NewValue: Boolean);
    function _Get_M_Stoim_pri_rasch_dlya_kagd: TBAFloat;
    function _GetStoim_pri_rasch_dlya_kagd: double;
    function _Get_M_Vygr_v_internet: TBABoolean;
    function _GetVygr_v_internet: Boolean;
    procedure _SetVygr_v_internet(const NewValue: Boolean);
    function _Get_M_Zagr_iz_interneta: TBABoolean;
    function _GetZagr_iz_interneta: Boolean;
    procedure _SetZagr_iz_interneta(const NewValue: Boolean);
    function _Get_M_IDInternet: TBAInteger;
    function _GetIDInternet: Integer;
    procedure _SetIDInternet(const NewValue: Integer);
    function _Get_M_Delitj_stoim_nomera: TBABoolean;
    function _GetDelitj_stoim_nomera: Boolean;
    procedure _SetDelitj_stoim_nomera(const NewValue: Boolean);
    function _Get_M_Dob_stoim_ot_prodleniya: TBAFloat;
    function _GetDob_stoim_ot_prodleniya: double;
    function _GetPredost_diskont: TDiscont_politikaList;
    function _GetLinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList;
    function _GetOpis_progiv_v: TNomer_arendy;
    function _Get_M_Opis_progiv_v: TBoldObjectReference;
    procedure _SetOpis_progiv_v(const value: TNomer_arendy);
    function _GetOpis_prog_klienta: TKlientList;
    function _GetProgivanie: TProgivanieList;
    function _Getimeet_oplatu: TPrihodnyi_orderList;
    function _Getoplachivaetsya: TKlient;
    function _Get_M_oplachivaetsya: TBoldObjectReference;
    procedure _Setoplachivaetsya(const value: TKlient);
    function _Getzavedyon_administ: TPersonal;
    function _Get_M_zavedyon_administ: TBoldObjectReference;
    procedure _Setzavedyon_administ(const value: TPersonal);
    function _Getimeet_pereocenki: TPereocenkaList;
  protected
    procedure _Informaciya_o_klientah_DeriveAndSubscribe(DerivedObject: TObject; Subscriber: TBoldSubscriber); virtual;
    function GetDeriveMethodForMember(Member: TBoldMember): TBoldDeriveAndResubscribe; override;
    function GetReverseDeriveMethodForMember(Member: TBoldMember): TBoldReverseDerive; override;
  public
    property M_Data_vjezda: TBADate read _Get_M_Data_vjezda;
    property M_Data_vyezda: TBADate read _Get_M_Data_vyezda;
    property M_V_dnyah: TBAFloat read _Get_M_V_dnyah;
    property M_V_dnyah_vych: TBAFloat read _Get_M_V_dnyah_vych;
    property M_Oplata_vsya: TBAFloat read _Get_M_Oplata_vsya;
    property M_Vremeni_proshlo: TBAFloat read _Get_M_Vremeni_proshlo;
    property M_Dnei_proshlo: TBAFloat read _Get_M_Dnei_proshlo;
    property M_Stoimostj_proshlo: TBAFloat read _Get_M_Stoimostj_proshlo;
    property M_Vremeni_ostalosj: TBAFloat read _Get_M_Vremeni_ostalosj;
    property M_Dnei_ostalosj: TBAFloat read _Get_M_Dnei_ostalosj;
    property M_Stoimostj_ostalosj: TBAFloat read _Get_M_Stoimostj_ostalosj;
    property M_Oplacheno_vsego: TBAFloat read _Get_M_Oplacheno_vsego;
    property M_Zadolgaet_klient: TBABoolean read _Get_M_Zadolgaet_klient;
    property M_Sverh_sroka: TBABoolean read _Get_M_Sverh_sroka;
    property M_Poseleno_chislo: TBAInteger read _Get_M_Poseleno_chislo;
    property M_Informaciya_o_klientah: TBAString read _Get_M_Informaciya_o_klientah;
    property M_Schitatj_po_kol_chelovek: TBABoolean read _Get_M_Schitatj_po_kol_chelovek;
    property M_Stoim_v_sutki_vychisl: TBAFloat read _Get_M_Stoim_v_sutki_vychisl;
    property M_Nachalo_intervala: TBADateTime read _Get_M_Nachalo_intervala;
    property M_Konec_intervala: TBADateTime read _Get_M_Konec_intervala;
    property M_Summa_za_interval: TBAFloat read _Get_M_Summa_za_interval;
    property M_Odin_chas: TBAFloat read _Get_M_Odin_chas;
    property M_Odin_denj: TBAFloat read _Get_M_Odin_denj;
    property M_Tek_vremya: TBADateTime read _Get_M_Tek_vremya;
    property M_Vremeni_vych: TBAFloat read _Get_M_Vremeni_vych;
    property M_Vyezd_faktich: TBADateTime read _Get_M_Vyezd_faktich;
    property M_Osvobogdyon: TBABoolean read _Get_M_Osvobogdyon;
    property M_Posl_dlya_nomera: TBABoolean read _Get_M_Posl_dlya_nomera;
    property M_Oplata_vsya_s_dostavk: TBAFloat read _Get_M_Oplata_vsya_s_dostavk;
    property M_Dolg_klient: TBAFloat read _Get_M_Dolg_klient;
    property M_Dolya_zaversh: TBAFloat read _Get_M_Dolya_zaversh;
    property M_Stoimostj_ustan: TBAFloat read _Get_M_Stoimostj_ustan;
    property M_V_dnyah_proshlo_s_chas: TBAString read _Get_M_V_dnyah_proshlo_s_chas;
    property M_Chasov_ostat_po_mod: TBAFloat read _Get_M_Chasov_ostat_po_mod;
    property M_Dnei_ostat_po_mod: TBAFloat read _Get_M_Dnei_ostat_po_mod;
    property M_Dob_stoimostj_pereoc: TBAFloat read _Get_M_Dob_stoimostj_pereoc;
    property M_Procent_otchisl_bronj: TBAFloat read _Get_M_Procent_otchisl_bronj;
    property M_Summa_bronj: TBAFloat read _Get_M_Summa_bronj;
    property M_Na_vyselenie: TBABoolean read _Get_M_Na_vyselenie;
    property M_Stoim_na_chel_v_sutki: TBAFloat read _Get_M_Stoim_na_chel_v_sutki;
    property M_Stoim_na_chel_vychisl: TBAFloat read _Get_M_Stoim_na_chel_vychisl;
    property M_Schitatj_dlya_kagd: TBABoolean read _Get_M_Schitatj_dlya_kagd;
    property M_Stoim_pri_rasch_dlya_kagd: TBAFloat read _Get_M_Stoim_pri_rasch_dlya_kagd;
    property M_Vygr_v_internet: TBABoolean read _Get_M_Vygr_v_internet;
    property M_Zagr_iz_interneta: TBABoolean read _Get_M_Zagr_iz_interneta;
    property M_IDInternet: TBAInteger read _Get_M_IDInternet;
    property M_Delitj_stoim_nomera: TBABoolean read _Get_M_Delitj_stoim_nomera;
    property M_Dob_stoim_ot_prodleniya: TBAFloat read _Get_M_Dob_stoim_ot_prodleniya;
    property M_Predost_diskont: TDiscont_politikaList read _GetPredost_diskont;
    property M_LinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList read _GetLinkPredost_diskont_vPredost_diskont;
    property M_Opis_progiv_v: TBoldObjectReference read _Get_M_Opis_progiv_v;
    property M_Opis_prog_klienta: TKlientList read _GetOpis_prog_klienta;
    property M_Progivanie: TProgivanieList read _GetProgivanie;
    property M_imeet_oplatu: TPrihodnyi_orderList read _Getimeet_oplatu;
    property M_oplachivaetsya: TBoldObjectReference read _Get_M_oplachivaetsya;
    property M_zavedyon_administ: TBoldObjectReference read _Get_M_zavedyon_administ;
    property M_imeet_pereocenki: TPereocenkaList read _Getimeet_pereocenki;
    property Data_vjezda: TDate read _GetData_vjezda write _SetData_vjezda;
    property Data_vyezda: TDate read _GetData_vyezda write _SetData_vyezda;
    property V_dnyah: double read _GetV_dnyah write _SetV_dnyah;
    property V_dnyah_vych: double read _GetV_dnyah_vych;
    property Oplata_vsya: double read _GetOplata_vsya;
    property Vremeni_proshlo: double read _GetVremeni_proshlo;
    property Dnei_proshlo: double read _GetDnei_proshlo;
    property Stoimostj_proshlo: double read _GetStoimostj_proshlo;
    property Vremeni_ostalosj: double read _GetVremeni_ostalosj;
    property Dnei_ostalosj: double read _GetDnei_ostalosj;
    property Stoimostj_ostalosj: double read _GetStoimostj_ostalosj;
    property Oplacheno_vsego: double read _GetOplacheno_vsego;
    property Zadolgaet_klient: Boolean read _GetZadolgaet_klient;
    property Sverh_sroka: Boolean read _GetSverh_sroka;
    property Poseleno_chislo: Integer read _GetPoseleno_chislo;
    property Informaciya_o_klientah: String read _GetInformaciya_o_klientah;
    property Schitatj_po_kol_chelovek: Boolean read _GetSchitatj_po_kol_chelovek write _SetSchitatj_po_kol_chelovek;
    property Stoim_v_sutki_vychisl: double read _GetStoim_v_sutki_vychisl write _SetStoim_v_sutki_vychisl;
    property Nachalo_intervala: TDateTime read _GetNachalo_intervala;
    property Konec_intervala: TDateTime read _GetKonec_intervala;
    property Summa_za_interval: double read _GetSumma_za_interval;
    property Odin_chas: double read _GetOdin_chas;
    property Odin_denj: double read _GetOdin_denj;
    property Tek_vremya: TDateTime read _GetTek_vremya;
    property Vremeni_vych: double read _GetVremeni_vych;
    property Vyezd_faktich: TDateTime read _GetVyezd_faktich write _SetVyezd_faktich;
    property Osvobogdyon: Boolean read _GetOsvobogdyon;
    property Posl_dlya_nomera: Boolean read _GetPosl_dlya_nomera;
    property Oplata_vsya_s_dostavk: double read _GetOplata_vsya_s_dostavk;
    property Dolg_klient: double read _GetDolg_klient;
    property Dolya_zaversh: double read _GetDolya_zaversh;
    property Stoimostj_ustan: double read _GetStoimostj_ustan write _SetStoimostj_ustan;
    property V_dnyah_proshlo_s_chas: String read _GetV_dnyah_proshlo_s_chas;
    property Chasov_ostat_po_mod: double read _GetChasov_ostat_po_mod;
    property Dnei_ostat_po_mod: double read _GetDnei_ostat_po_mod;
    property Dob_stoimostj_pereoc: double read _GetDob_stoimostj_pereoc;
    property Procent_otchisl_bronj: double read _GetProcent_otchisl_bronj write _SetProcent_otchisl_bronj;
    property Summa_bronj: double read _GetSumma_bronj write _SetSumma_bronj;
    property Na_vyselenie: Boolean read _GetNa_vyselenie;
    property Stoim_na_chel_v_sutki: double read _GetStoim_na_chel_v_sutki write _SetStoim_na_chel_v_sutki;
    property Stoim_na_chel_vychisl: double read _GetStoim_na_chel_vychisl;
    property Schitatj_dlya_kagd: Boolean read _GetSchitatj_dlya_kagd write _SetSchitatj_dlya_kagd;
    property Stoim_pri_rasch_dlya_kagd: double read _GetStoim_pri_rasch_dlya_kagd;
    property Vygr_v_internet: Boolean read _GetVygr_v_internet write _SetVygr_v_internet;
    property Zagr_iz_interneta: Boolean read _GetZagr_iz_interneta write _SetZagr_iz_interneta;
    property IDInternet: Integer read _GetIDInternet write _SetIDInternet;
    property Delitj_stoim_nomera: Boolean read _GetDelitj_stoim_nomera write _SetDelitj_stoim_nomera;
    property Dob_stoim_ot_prodleniya: double read _GetDob_stoim_ot_prodleniya;
    property Predost_diskont: TDiscont_politikaList read _GetPredost_diskont;
    property LinkPredost_diskont_vPredost_diskont: TLinkPredost_diskont_vPredost_diskontList read _GetLinkPredost_diskont_vPredost_diskont;
    property Opis_progiv_v: TNomer_arendy read _GetOpis_progiv_v write _SetOpis_progiv_v;
    property Opis_prog_klienta: TKlientList read _GetOpis_prog_klienta;
    property Progivanie: TProgivanieList read _GetProgivanie;
    property imeet_oplatu: TPrihodnyi_orderList read _Getimeet_oplatu;
    property oplachivaetsya: TKlient read _Getoplachivaetsya write _Setoplachivaetsya;
    property zavedyon_administ: TPersonal read _Getzavedyon_administ write _Setzavedyon_administ;
    property imeet_pereocenki: TPereocenkaList read _Getimeet_pereocenki;
  end;

  TBusinessClassesRootList = class(TBoldObjectList)
  protected
    function GetBoldObject(index: Integer): TBusinessClassesRoot;
    procedure SetBoldObject(index: Integer; NewObject: TBusinessClassesRoot);
  public
    function Includes(anObject: TBusinessClassesRoot): Boolean;
    function IndexOf(anObject: TBusinessClassesRoot): Integer;
    procedure Add(NewObject: TBusinessClassesRoot);
    function AddNew: TBusinessClassesRoot;
    procedure Insert(index: Integer; NewObject: TBusinessClassesRoot);
    property BoldObjects[index: Integer]: TBusinessClassesRoot read GetBoldObject write SetBoldObject; default;
  end;

  Tispoljz_obychn_skidkinapryamuyu_ocenivaetList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): Tispoljz_obychn_skidkinapryamuyu_ocenivaet;
    procedure SetBoldObject(index: Integer; NewObject: Tispoljz_obychn_skidkinapryamuyu_ocenivaet);
  public
    function Includes(anObject: Tispoljz_obychn_skidkinapryamuyu_ocenivaet): Boolean;
    function IndexOf(anObject: Tispoljz_obychn_skidkinapryamuyu_ocenivaet): Integer;
    procedure Add(NewObject: Tispoljz_obychn_skidkinapryamuyu_ocenivaet);
    function AddNew: Tispoljz_obychn_skidkinapryamuyu_ocenivaet;
    procedure Insert(index: Integer; NewObject: Tispoljz_obychn_skidkinapryamuyu_ocenivaet);
    property BoldObjects[index: Integer]: Tispoljz_obychn_skidkinapryamuyu_ocenivaet read GetBoldObject write SetBoldObject; default;
  end;

  TLinkPredost_diskont_vPredost_diskontList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TLinkPredost_diskont_vPredost_diskont;
    procedure SetBoldObject(index: Integer; NewObject: TLinkPredost_diskont_vPredost_diskont);
  public
    function Includes(anObject: TLinkPredost_diskont_vPredost_diskont): Boolean;
    function IndexOf(anObject: TLinkPredost_diskont_vPredost_diskont): Integer;
    procedure Add(NewObject: TLinkPredost_diskont_vPredost_diskont);
    function AddNew: TLinkPredost_diskont_vPredost_diskont;
    procedure Insert(index: Integer; NewObject: TLinkPredost_diskont_vPredost_diskont);
    property BoldObjects[index: Integer]: TLinkPredost_diskont_vPredost_diskont read GetBoldObject write SetBoldObject; default;
  end;

  TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chelList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    procedure SetBoldObject(index: Integer; NewObject: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel);
  public
    function Includes(anObject: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel): Boolean;
    function IndexOf(anObject: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel): Integer;
    procedure Add(NewObject: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel);
    function AddNew: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel;
    procedure Insert(index: Integer; NewObject: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel);
    property BoldObjects[index: Integer]: TOtd_chel_imeet_skidkiSkidka_kak_prog_otd_chel read GetBoldObject write SetBoldObject; default;
  end;

  TBronjList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TBronj;
    procedure SetBoldObject(index: Integer; NewObject: TBronj);
  public
    function Includes(anObject: TBronj): Boolean;
    function IndexOf(anObject: TBronj): Integer;
    procedure Add(NewObject: TBronj);
    function AddNew: TBronj;
    procedure Insert(index: Integer; NewObject: TBronj);
    property BoldObjects[index: Integer]: TBronj read GetBoldObject write SetBoldObject; default;
  end;

  TLog_operaciiList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TLog_operacii;
    procedure SetBoldObject(index: Integer; NewObject: TLog_operacii);
  public
    function Includes(anObject: TLog_operacii): Boolean;
    function IndexOf(anObject: TLog_operacii): Integer;
    procedure Add(NewObject: TLog_operacii);
    function AddNew: TLog_operacii;
    procedure Insert(index: Integer; NewObject: TLog_operacii);
    property BoldObjects[index: Integer]: TLog_operacii read GetBoldObject write SetBoldObject; default;
  end;

  TNastroikiList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TNastroiki;
    procedure SetBoldObject(index: Integer; NewObject: TNastroiki);
  public
    function Includes(anObject: TNastroiki): Boolean;
    function IndexOf(anObject: TNastroiki): Integer;
    procedure Add(NewObject: TNastroiki);
    function AddNew: TNastroiki;
    procedure Insert(index: Integer; NewObject: TNastroiki);
    property BoldObjects[index: Integer]: TNastroiki read GetBoldObject write SetBoldObject; default;
  end;

  TNomer_arendyList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TNomer_arendy;
    procedure SetBoldObject(index: Integer; NewObject: TNomer_arendy);
  public
    function Includes(anObject: TNomer_arendy): Boolean;
    function IndexOf(anObject: TNomer_arendy): Integer;
    procedure Add(NewObject: TNomer_arendy);
    function AddNew: TNomer_arendy;
    procedure Insert(index: Integer; NewObject: TNomer_arendy);
    property BoldObjects[index: Integer]: TNomer_arendy read GetBoldObject write SetBoldObject; default;
  end;

  TOgidanieList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TOgidanie;
    procedure SetBoldObject(index: Integer; NewObject: TOgidanie);
  public
    function Includes(anObject: TOgidanie): Boolean;
    function IndexOf(anObject: TOgidanie): Integer;
    procedure Add(NewObject: TOgidanie);
    function AddNew: TOgidanie;
    procedure Insert(index: Integer; NewObject: TOgidanie);
    property BoldObjects[index: Integer]: TOgidanie read GetBoldObject write SetBoldObject; default;
  end;

  TPereocenkaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TPereocenka;
    procedure SetBoldObject(index: Integer; NewObject: TPereocenka);
  public
    function Includes(anObject: TPereocenka): Boolean;
    function IndexOf(anObject: TPereocenka): Integer;
    procedure Add(NewObject: TPereocenka);
    function AddNew: TPereocenka;
    procedure Insert(index: Integer; NewObject: TPereocenka);
    property BoldObjects[index: Integer]: TPereocenka read GetBoldObject write SetBoldObject; default;
  end;

  TPersonaList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TPersona;
    procedure SetBoldObject(index: Integer; NewObject: TPersona);
  public
    function Includes(anObject: TPersona): Boolean;
    function IndexOf(anObject: TPersona): Integer;
    procedure Add(NewObject: TPersona);
    function AddNew: TPersona;
    procedure Insert(index: Integer; NewObject: TPersona);
    property BoldObjects[index: Integer]: TPersona read GetBoldObject write SetBoldObject; default;
  end;

  TPrihodn_dokumentList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TPrihodn_dokument;
    procedure SetBoldObject(index: Integer; NewObject: TPrihodn_dokument);
  public
    function Includes(anObject: TPrihodn_dokument): Boolean;
    function IndexOf(anObject: TPrihodn_dokument): Integer;
    procedure Add(NewObject: TPrihodn_dokument);
    function AddNew: TPrihodn_dokument;
    procedure Insert(index: Integer; NewObject: TPrihodn_dokument);
    property BoldObjects[index: Integer]: TPrihodn_dokument read GetBoldObject write SetBoldObject; default;
  end;

  TProgivanieList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TProgivanie;
    procedure SetBoldObject(index: Integer; NewObject: TProgivanie);
  public
    function Includes(anObject: TProgivanie): Boolean;
    function IndexOf(anObject: TProgivanie): Integer;
    procedure Add(NewObject: TProgivanie);
    function AddNew: TProgivanie;
    procedure Insert(index: Integer; NewObject: TProgivanie);
    property BoldObjects[index: Integer]: TProgivanie read GetBoldObject write SetBoldObject; default;
  end;

  TSpravochnikList = class(TBusinessClassesRootList)
  protected
    function GetBoldObject(index: Integer): TSpravochnik;
    procedure SetBoldObject(index: Integer; NewObject: TSpravochnik);
  public
    function Includes(anObject: TSpravochnik): Boolean;
    function IndexOf(anObject: TSpravochnik): Integer;
    procedure Add(NewObject: TSpravochnik);
    function AddNew: TSpravochnik;
    procedure Insert(index: Integer; NewObject: TSpravochnik);
    property BoldObjects[index: Integer]: TSpravochnik read GetBoldObject write SetBoldObject; default;
  end;

  TOrganizaciyaList = class(TPersonaList)
  protected
    function GetBoldObject(index: Integer): TOrganizaciya;
    procedure SetBoldObject(index: Integer; NewObject: TOrganizaciya);
  public
    function Includes(anObject: TOrganizaciya): Boolean;
    function IndexOf(anObject: TOrganizaciya): Integer;
    procedure Add(NewObject: TOrganizaciya);
    function AddNew: TOrganizaciya;
    procedure Insert(index: Integer; NewObject: TOrganizaciya);
    property BoldObjects[index: Integer]: TOrganizaciya read GetBoldObject write SetBoldObject; default;
  end;

  TPrihodnyi_orderList = class(TPrihodn_dokumentList)
  protected
    function GetBoldObject(index: Integer): TPrihodnyi_order;
    procedure SetBoldObject(index: Integer; NewObject: TPrihodnyi_order);
  public
    function Includes(anObject: TPrihodnyi_order): Boolean;
    function IndexOf(anObject: TPrihodnyi_order): Integer;
    procedure Add(NewObject: TPrihodnyi_order);
    function AddNew: TPrihodnyi_order;
    procedure Insert(index: Integer; NewObject: TPrihodnyi_order);
    property BoldObjects[index: Integer]: TPrihodnyi_order read GetBoldObject write SetBoldObject; default;
  end;

  TDiscont_politikaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TDiscont_politika;
    procedure SetBoldObject(index: Integer; NewObject: TDiscont_politika);
  public
    function Includes(anObject: TDiscont_politika): Boolean;
    function IndexOf(anObject: TDiscont_politika): Integer;
    procedure Add(NewObject: TDiscont_politika);
    function AddNew: TDiscont_politika;
    procedure Insert(index: Integer; NewObject: TDiscont_politika);
    property BoldObjects[index: Integer]: TDiscont_politika read GetBoldObject write SetBoldObject; default;
  end;

  TDolgnostjList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TDolgnostj;
    procedure SetBoldObject(index: Integer; NewObject: TDolgnostj);
  public
    function Includes(anObject: TDolgnostj): Boolean;
    function IndexOf(anObject: TDolgnostj): Integer;
    procedure Add(NewObject: TDolgnostj);
    function AddNew: TDolgnostj;
    procedure Insert(index: Integer; NewObject: TDolgnostj);
    property BoldObjects[index: Integer]: TDolgnostj read GetBoldObject write SetBoldObject; default;
  end;

  TKlass_nomeraList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TKlass_nomera;
    procedure SetBoldObject(index: Integer; NewObject: TKlass_nomera);
  public
    function Includes(anObject: TKlass_nomera): Boolean;
    function IndexOf(anObject: TKlass_nomera): Integer;
    procedure Add(NewObject: TKlass_nomera);
    function AddNew: TKlass_nomera;
    procedure Insert(index: Integer; NewObject: TKlass_nomera);
    property BoldObjects[index: Integer]: TKlass_nomera read GetBoldObject write SetBoldObject; default;
  end;

  TKorpusList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TKorpus;
    procedure SetBoldObject(index: Integer; NewObject: TKorpus);
  public
    function Includes(anObject: TKorpus): Boolean;
    function IndexOf(anObject: TKorpus): Integer;
    procedure Add(NewObject: TKorpus);
    function AddNew: TKorpus;
    procedure Insert(index: Integer; NewObject: TKorpus);
    property BoldObjects[index: Integer]: TKorpus read GetBoldObject write SetBoldObject; default;
  end;

  TOpciiya_urovnyaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TOpciiya_urovnya;
    procedure SetBoldObject(index: Integer; NewObject: TOpciiya_urovnya);
  public
    function Includes(anObject: TOpciiya_urovnya): Boolean;
    function IndexOf(anObject: TOpciiya_urovnya): Integer;
    procedure Add(NewObject: TOpciiya_urovnya);
    function AddNew: TOpciiya_urovnya;
    procedure Insert(index: Integer; NewObject: TOpciiya_urovnya);
    property BoldObjects[index: Integer]: TOpciiya_urovnya read GetBoldObject write SetBoldObject; default;
  end;

  TOteljList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TOtelj;
    procedure SetBoldObject(index: Integer; NewObject: TOtelj);
  public
    function Includes(anObject: TOtelj): Boolean;
    function IndexOf(anObject: TOtelj): Integer;
    procedure Add(NewObject: TOtelj);
    function AddNew: TOtelj;
    procedure Insert(index: Integer; NewObject: TOtelj);
    property BoldObjects[index: Integer]: TOtelj read GetBoldObject write SetBoldObject; default;
  end;

  TRash_dokumentList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TRash_dokument;
    procedure SetBoldObject(index: Integer; NewObject: TRash_dokument);
  public
    function Includes(anObject: TRash_dokument): Boolean;
    function IndexOf(anObject: TRash_dokument): Integer;
    procedure Add(NewObject: TRash_dokument);
    function AddNew: TRash_dokument;
    procedure Insert(index: Integer; NewObject: TRash_dokument);
    property BoldObjects[index: Integer]: TRash_dokument read GetBoldObject write SetBoldObject; default;
  end;

  TSkidkiList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TSkidki;
    procedure SetBoldObject(index: Integer; NewObject: TSkidki);
  public
    function Includes(anObject: TSkidki): Boolean;
    function IndexOf(anObject: TSkidki): Integer;
    procedure Add(NewObject: TSkidki);
    function AddNew: TSkidki;
    procedure Insert(index: Integer; NewObject: TSkidki);
    property BoldObjects[index: Integer]: TSkidki read GetBoldObject write SetBoldObject; default;
  end;

  TCenovaya_politikaList = class(TSpravochnikList)
  protected
    function GetBoldObject(index: Integer): TCenovaya_politika;
    procedure SetBoldObject(index: Integer; NewObject: TCenovaya_politika);
  public
    function Includes(anObject: TCenovaya_politika): Boolean;
    function IndexOf(anObject: TCenovaya_politika): Integer;
    procedure Add(NewObject: TCenovaya_politika);
    function AddNew: TCenovaya_politika;
    procedure Insert(index: Integer; NewObject: TCenovaya_politika);
    property BoldObjects[index: Integer]: TCenovaya_politika read GetBoldObject write SetBoldObject; default;
  end;

  TKlientList = class(TOrganizaciyaList)
  protected
    function GetBoldObject(index: Integer): TKlient;
    procedure SetBoldObject(index: Integer; NewObject: TKlient);
  public
    function Includes(anObject: TKlient): Boolean;
    function IndexOf(anObject: TKlient): Integer;
    procedure Add(NewObject: TKlient);
    function AddNew: TKlient;
    procedure Insert(index: Integer; NewObject: TKlient);
    property BoldObjects[index: Integer]: TKlient read GetBoldObject write SetBoldObject; default;
  end;

  TPersonalList = class(TOrganizaciyaList)
  protected
    function GetBoldObject(index: Integer): TPersonal;
    procedure SetBoldObject(index: Integer; NewObject: TPersonal);
  public
    function Includes(anObject: TPersonal): Boolean;
    function IndexOf(anObject: TPersonal): Integer;
    procedure Add(NewObject: TPersonal);
    function AddNew: TPersonal;
    procedure Insert(index: Integer; NewObject: TPersonal);
    property BoldObjects[index: Integer]: TPersonal read GetBoldObject write SetBoldObject; default;
  end;

  TList_klientaList = class(TRash_dokumentList)
  protected
    function GetBoldObject(index: Integer): TList_klienta;
    procedure SetBoldObject(index: Integer; NewObject: TList_klienta);
  public
    function Includes(anObject: TList_klienta): Boolean;
    function IndexOf(anObject: TList_klienta): Integer;
    procedure Add(NewObject: TList_klienta);
    function AddNew: TList_klienta;
    procedure Insert(index: Integer; NewObject: TList_klienta);
    property BoldObjects[index: Integer]: TList_klienta read GetBoldObject write SetBoldObject; default;
  end;

function GeneratedCodeCRC: String;

implementation

uses
  // implementation uses
  // implementation dependencies
  // other
  BoldGeneratedCodeDictionary;

{$ENDIF}

